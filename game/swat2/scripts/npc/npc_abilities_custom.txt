"DOTAAbilities"
{
	//=================================================================================================================
	    // Ability: Armor Upgrade
	    // Note: We need this to go past level 20, we will accomplish this with two abilities
	    //       armor_upgrade_1 will cover values 1-20. armor_upgrade_20 will cover in increments of 20
	    //       So armor 17 = armor_upgrade_1 = level 17, armor_upgrade_20 = level 0
	    //       So armor 34 = armor_upgrade_1 = level 14, armor_upgrade_20 = level 1
	    //       See EnemyUpgrades GiveUnitArmor() method
	    //=================================================================================================================
	    "common_armor_upgrade_1"
	    {
	        "BaseClass"					"ability_datadriven"
	        "AbilityTextureName"		"lone_druid_rabid"
	        "MaxLevel"					"20"
	
	        "AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	
	        "AbilitySpecial"
	        {
	            "01"
	            {
	                "var_type"				"FIELD_INTEGER"
	                "bonus_armor"			"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20"
	            }
	        }
	
	        "Modifiers"
	        {
	            "modifier_common_armor_upgrade_1"
	            {
	                "Passive"			"1"
	                "IsHidden"			"1"
	
	                "Properties"
	                {
	                    "MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS" "%bonus_armor"
	                }
	            }
	        }
	    }
	//=================================================================================================================
	    // Ability: Armor Upgrade
	    // Note: We need this to go past level 20, we will accomplish this with two abilities
	    //       armor_upgrade_1 will cover values 1-20. armor_upgrade_20 will cover in increments of 20
	    //       So armor 17 = armor_upgrade_1 = level 17, armor_upgrade_20 = level 0
	    //       So armor 34 = armor_upgrade_1 = level 14, armor_upgrade_20 = level 1
	    //       See EnemyUpgrades GiveUnitArmor() method
	    //=================================================================================================================
	"common_armor_upgrade_20"
	    {
	        "BaseClass"					"ability_datadriven"
	        "AbilityTextureName"		"lone_druid_rabid"
	        "MaxLevel"					"20"
	
	        "AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	
	        "AbilitySpecial"
	        {
	            "01"
	            {
	                "var_type"				"FIELD_INTEGER"
	                "bonus_armor"			"20 40 60 80 100 120 140 180 200 220 240 260 280 300 320 340 360 380 400"
	            }
	        }
	
	        "Modifiers"
	        {
	            "modifier_common_armor_upgrade_20"
	            {
	                "Passive"			"1"
	                "IsHidden"			"1"
	
	                "Properties"
	                {
	                    "MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS" "%bonus_armor"
	                }
	            }
	        }
	    }
	//=================================================================================================================
	    // Friendly Fire
	    //=================================================================================================================
	    "common_friendly_fire_on"
	    {
	        // General
	        //-------------------------------------------------------------------------------------------------------------
	        "BaseClass"                     "ability_datadriven"
	        "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
	        "AbilityTextureName"            "disruptor_glimpse"
	
	        // Modifiers
	        //-------------------------------------------------------------------------------------------------------------
	        "Modifiers"
	        {
	            "modifier_deniable"
	            {
	                "Passive"                       "1"
	                "IsHidden"						"1"
	                "States"
	                {
	                    "MODIFIER_STATE_SPECIALLY_DENIABLE"	"MODIFIER_STATE_VALUE_ENABLED"
	                }
	            }
	        }
	    }
	//=================================================================================================================
	 // Invulnerability
	 //=================================================================================================================
	    "common_invulnerable"
	    {
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	        "BaseClass"                     "ability_datadriven"
	        "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
	        "AbilityTextureName"            "disruptor_glimpse"
	
	        // Modifiers
	        //-------------------------------------------------------------------------------------------------------------
	        "Modifiers"
	        {
	            "common_invulnerable"
	            {
	                "Passive"                       "1"
	                    "States"
	                    {
	                        "MODIFIER_STATE_INVULNERABLE"       "MODIFIER_STATE_VALUE_ENABLED"
	                    }
	            }
	        }
	    }
	//=================================================================================================================
	// Magic Immune
	//=================================================================================================================
	"common_magic_immune"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"                     "ability_datadriven"
	    "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
	    "AbilityTextureName"            "disruptor_glimpse"
	
	    // Modifiers
	    //-------------------------------------------------------------------------------------------------------------
	    "Modifiers"
	    {
	        "common_invulnerable"
	        {
	            "IsHidden"                       "1"
	                "Passive"                       "1"
	                "States"
	                {
	                    "MODIFIER_STATE_MAGIC_IMMUNE" "MODIFIER_STATE_VALUE_ENABLED"
	                }
	        }
	    }
	}
	//=================================================================================================================
	 // Make "dummy" (makes this unit invulnerable, unselectable, no minimap, and no healthbar)
	 //=================================================================================================================
	    "common_make_dummy"
	    {
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	        "BaseClass"                     "ability_datadriven"
	        "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
	        "AbilityTextureName"            "disruptor_glimpse"
	
	        // Modifiers
	        //-------------------------------------------------------------------------------------------------------------
	        "Modifiers"
	        {
	            "common_unselectable"
	            {
	                "Passive"                       "1"
	                    "States"
	                    {
	                        "MODIFIER_STATE_INVULNERABLE"       "MODIFIER_STATE_VALUE_ENABLED"
	                        "MODIFIER_STATE_UNSELECTABLE"	"MODIFIER_STATE_VALUE_ENABLED"
	                        "MODIFIER_STATE_NO_HEALTH_BAR"		"MODIFIER_STATE_VALUE_ENABLED"
	                        "MODIFIER_STATE_NOT_ON_MINIMAP"	"MODIFIER_STATE_VALUE_ENABLED"
	                    }
	            }
	        }
	    }
	//=================================================================================================================
	    // No Health Bar
	    //=================================================================================================================
	    "common_no_health_bar"
	    {
	        // General
	        //-------------------------------------------------------------------------------------------------------------
	        "BaseClass"                     "ability_datadriven"
	            "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
	            "AbilityTextureName"            "disruptor_glimpse"
	
	            // Modifiers
	            //-------------------------------------------------------------------------------------------------------------
	            "Modifiers"
	            {
	
	                "common_no_health_bar"
	                {
	                    "Passive"                       "1"
	                        "States"
	                        {
	                            "MODIFIER_STATE_NO_HEALTH_BAR"		"MODIFIER_STATE_VALUE_ENABLED"
	                        }
	                }
	            }
	    }
	//=================================================================================================================
	 // No minimap
	 //=================================================================================================================
	    "common_no_minimap"
	    {
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	        "BaseClass"                     "ability_datadriven"
	        "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
	        "AbilityTextureName"            "disruptor_glimpse"
	
	        // Modifiers
	        //-------------------------------------------------------------------------------------------------------------
	        "Modifiers"
	        {
	            "common_unselectable"
	            {
	                "IsHidden"                      "1"
	                "Passive"                       "1"
	                    "States"
	                    {
	                        "MODIFIER_STATE_NOT_ON_MINIMAP"	"MODIFIER_STATE_VALUE_ENABLED"
	                    }
	            }
	        }
	    }
	//=================================================================================================================
	// Ability: Truesight
	// Aura that grants visibility to invisible units within a certain radius
	// TODO: Look up all true sight values and put them as levels
	//=================================================================================================================
	"common_truesight_aura"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"		                "ability_datadriven"
	    "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	    "AbilityTextureName"			"keeper_of_the_light_blinding_light"
	    "MaxLevel"	"1"
	
	    // Special
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilitySpecial"
	    {
	        "01"
	        {
	            "var_type"				"FIELD_INTEGER"
	            "radius"				"120 1500"
	        }
	    }
	
	    "Modifiers"
	    {
	        "modifier_truesight_aura"
	        {
	            "Passive"			"1"
	            "IsHidden"			"1"
	
	            "ThinkInterval"  "0.05"
	            "OnIntervalThink"
	            {
	                "ActOnTargets"
	                {
	                    "Target"
	                    {
	                        "Center"  	"TARGET"
	                        "Radius" 	"%radius"
	                        "Teams" 	"DOTA_UNIT_TARGET_TEAM_ENEMY"
	                        "Types" 	"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
	                    }
	
	                    "Action"
	                    {
	                        "RemoveModifier"
	                        {
	                            "ModifierName"	"modifier_truesight_reveal"
	                            "Target" 		"TARGET"
	                        }
	
	                        "ApplyModifier"
	                        {
	                            "ModifierName"	"modifier_truesight_reveal"
	                            "Target" 		"TARGET"
	                        }
	                    }
	                }
	            }
	        }
	
	        "modifier_truesight_reveal"
	        {
	            "IsHidden"			"1"
	            "Duration"			"0.5"	//The True Sight effect lingers for 0.5 seconds.
	            "States"
	            {
	                "MODIFIER_STATE_INVISIBLE"	"MODIFIER_STATE_VALUE_DISABLED"
	            }
	        }
	    }
	}
	//=================================================================================================================
	 // Unselectable
	 //=================================================================================================================
	    "common_unselectable"
	    {
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	        "BaseClass"                     "ability_datadriven"
	        "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
	        "AbilityTextureName"            "disruptor_glimpse"
	
	        // Modifiers
	        //-------------------------------------------------------------------------------------------------------------
	        "Modifiers"
	        {
	            "common_unselectable"
	            {
	                "Passive"                       "1"
	                    "States"
	                    {
	                        "MODIFIER_STATE_UNSELECTABLE"	"MODIFIER_STATE_VALUE_ENABLED"
	                    }
	            }
	        }
	    }
	//=================================================================================================================
	// Ability: Sneak (Covert Sniper)
	   // Note: Epic Levels: reduced fade delay and increased move speed. (Exact values unknown)
	//=================================================================================================================
	   "covert_sniper_sneak"
	   {
	      // General
	      //-------------------------------------------------------------------------------------------------------------
	      "BaseClass"						"ability_datadriven"
	      "AbilityName"              "Sneak"
	      "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_TOGGLE | DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
	      "SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
	      "MaxLevel"                 "6"
	      "AbilityTextureName"			"mirana_invis"
	
	      // Precache
	      //-------------------------------------------------------------------------------------------------------------
	      "precache"
	      {
	         "soundfile"			"soundevents/game_sounds_heroes/game_sounds_mirana.vsndevts"
	         "particle"			"particles/units/heroes/hero_mirana/mirana_moonlight_cast.vpcf"
	         "particle"			"particles/units/heroes/hero_mirana/mirana_moonlight_owner.vpcf"
	         "particle"			"particles/units/heroes/hero_mirana/mirana_moonlight_ray.vpcf"
	      }
	
	      // Time
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilityCastPoint"				"0.0"
	
	      // Special
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"              "FIELD_FLOAT"
	            "fade_delay"            "6.0 5.25 4.5 3.75 3.0 2.25"
	         }
	         "02"
	         {
	            "var_type"              "FIELD_INTEGER"
	            "move_speed"            "0 5 10 15 20 25"
	         }
	      }
	
	      "OnToggleOn"
	      {
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_sneak_watcher"
	            "Target" "CASTER"
	         }
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_sneak_revealed"
	            "Target" "CASTER"
	         }
	      }
	      "OnToggleOff"
	      {
	         "RemoveModifier"
	         {
	            "ModifierName" "modifier_sneak_watcher"
	            "Target" "CASTER"
	         }
	         "RemoveModifier"
	         {
	            "ModifierName" "modifier_sneak_revealed"
	            "Target" "CASTER"
	         }
	         "RemoveModifier"
	         {
	            "ModifierName" "modifier_sneak_invis"
	            "Target" "CASTER"
	         }
	      }
	
	      "Modifiers"
	      {
	         "modifier_sneak_movespeed"
	         {
	            "Passive"   "1"
	            "IsHidden"  "1"
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT" "%move_speed"
	            }
	         }
	         "modifier_sneak_watcher"
	         {
	            "IsHidden"  "1"
	            "OnAttackLanded"
	            {
	               "ApplyModifier"
	               {
	                  "ModifierName" "modifier_sneak_revealed"
	                  "Target" "CASTER"
	               }
	            }
	            "OnAbilityExecuted"
	            {
	               "ApplyModifier"
	               {
	                  "ModifierName" "modifier_sneak_revealed"
	                  "Target" "CASTER"
	               }
	            }
	         }
	         "modifier_sneak_revealed"
	         {
	            "IsHidden"  "1"
	            "Duration"	"%fade_delay"
	            "OnCreated"
	            {
	               "RemoveModifier"
	               {
	                  "ModifierName"	"modifier_sneak_invis"
	                  "Target"		"TARGET"
	               }
	            }
	            "OnDestroy"
	            {
	               "ApplyModifier"
	               {
	                  "ModifierName"	"modifier_sneak_invis"
	                  "Target"		"TARGET"
	               }
	            }
	         }
	         "modifier_sneak_invis"
	         {
	            "IsHidden"  "0"
	            "States"
	            {
	               "MODIFIER_STATE_INVISIBLE"	"MODIFIER_STATE_VALUE_ENABLED"
	            }
	         }
	      }
	   }
	//=================================================================================================================
	// Ability: Emergency Power(Cyborg)
	   //=================================================================================================================
	  "cyborg_emergency_power"
	   {
	// General
	//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				     "ability_datadriven"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"MaxLevel"                 "6"
		"AbilityTextureName"			"tinker_rearm"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
	
	
					"particle"			"particles/units/heroes/hero_keeper_of_the_light/keeper_chakra_magic.vpcf"
					"soundfile"		"soundevents/game_sounds_heroes/game_sounds_omniknight.vsndevts"
	
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"5 115 95 80 70 60"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"
	
		// Stats
		//-------------------------------------------------------------------------------------------------------------
		"AbilityModifierSupportValue"	"3.0"	// Value much higher than cost.
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_FLOAT"
				"mana_restore"			"500"
			}
		}
	
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Omniknight.GuardianAngel.Cast"
				"Target"		"TARGET"
			}
	
			"FireEffect"
			{
				"EffectName"	"particles/units/heroes/hero_keeper_of_the_light/keeper_chakra_magic.vpcf"
				"EffectAttachType"	"start_at_customorigin"
	
				"ControlPointEntities"
				{
					"CASTER"	"follow_origin"
					"TARGET"	"follow_origin"
				}
	
			}
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/heroes/hero_cyborg/cyborg_emergency_power"
				"Function"		"RestoreMana"
			}
		}
	}
	//=================================================================================================================
	// Cyborg: Forcefield
	//=================================================================================================================
	"cyborg_forcefield"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				"ability_datadriven"
		"AbilityTextureName"	"abaddon_aphotic_shield"
		"AbilityBehavior"		"DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityManaCost"		"120"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_troll_warlord.vsndevts"
			"particle"			"particles/units/heroes/hero_troll_warlord/troll_warlord_berserk_buff.vpcf"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0"
		"AbilityCooldown"				"2"
		
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName" 		"modifier_cyborg_forcefield"
				"Target"			"CASTER"
			}
			"RunScript"
			{
				"ScriptFile"	"util/SWATUtil.lua"
				"Function"		"SwapAbilitiesDataDriven"
	            "on_ability"    "cyborg_forcefield_off"
	            "off_ability"    "cyborg_forcefield"
			}
		}
		"Modifiers"
		{
			"modifier_cyborg_forcefield"
			{
				"ThinkInterval" 	"1"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_cyborg/cyborg_forcefield.lua"
						"Function"		"ForcefieldThink"
					}
				}
				"OnCreated"
				{
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_cyborg/cyborg_forcefield.lua"
						"Function"		"ForcefieldCreate"
					}
				}
				"OnDestroy"
				{
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_cyborg/cyborg_forcefield.lua"
						"Function"		"ForcefieldDestroy"
					}
				}
	            "Properties"
	            {
	                "MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_MAGICAL"      "1"
	                "MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PHYSICAL"     "1"
	                "MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE"         "1"
	            }
			}
		}
	}
	"cyborg_forcefield_off"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				"ability_datadriven"
		"AbilityBehavior"		"DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityTextureName"			"wisp_spirits"
		"AbilityManaCost"		"0"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_troll_warlord.vsndevts"
			"particle"			"particles/units/heroes/hero_troll_warlord/troll_warlord_berserk_buff.vpcf"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0"
		"AbilityCooldown"				"0"
		
		"OnSpellStart"
		{
			"RemoveModifier"
			{
				"ModifierName" 		"modifier_cyborg_forcefield"
				"Target"			"CASTER"
			}
			"RunScript"
			{
				"ScriptFile"	"util/SWATUtil.lua"
				"Function"		"SwapAbilitiesDataDriven"
	            "on_ability"    "cyborg_forcefield"
	            "off_ability"    "cyborg_forcefield_off"
			}
		}
	}
	//=================================================================================================================
	// Cybrog: Pheromones
	//=================================================================================================================
	"cyborg_pheromones"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				"ability_datadriven"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityTextureName"			"alchemist_unstable_concoction"
		"AbilityManaCost"		"200"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_troll_warlord.vsndevts"
			"particle"			"particles/units/heroes/hero_troll_warlord/troll_warlord_berserk_buff.vpcf"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0"
		"AbilityCooldown"				"6"
	
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"	"Hero_TrollWarlord.BerserkersRage.Toggle"
				"Target" 		"CASTER"
			}
			"RunScript"
			{
				"ScriptFile"	"util/SWATUtil.lua"
				"Function"		"SwapAbilitiesDataDriven"
				"on_ability"		"cyborg_pheromones_off"
				"off_ability"		"cyborg_pheromones"
			}
		}
	}
	"cyborg_pheromones_off"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				"ability_datadriven"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityTextureName"			"riki_smoke_screen"
		"AbilityManaCost"		"0"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"		"soundevents/game_sounds_heroes/game_sounds_venomancer.vsndevts"
			"particle"		"particles/units/heroes/hero_venomancer/venomancer_poison_nova.vpcf"
			"particle"		"particles/units/heroes/hero_venomancer/venomancer_poison_debuff_nova.vpcf"
			"particle"		"particles/units/heroes/hero_venomancer/venomancer_poison_nova_cast.vpcf"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0"
		"AbilityCooldown"				"0"
	
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"        "FIELD_INTEGER"
				"radius"          "1600"
			}
		}
	
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Venomancer.PoisonNova"
				"Target"		"CASTER"
			}
	
			"FireEffect"
			{
				"EffectName"	"particles/units/heroes/hero_venomancer/venomancer_poison_nova_cast.vpcf"
				"EffectAttachType"	"attach_origin"
				"Target"		"CASTER"
			}
	
			"FireEffect"
			{
				"EffectName"	"particles/units/heroes/hero_venomancer/venomancer_poison_nova.vpcf"
				"EffectAttachType"	"start_at_customorigin"
	
				"ControlPointEntities"
				{
					"CASTER"	"attach_origin"
				}
	
				"ControlPoints"
				{
					"01"	"1 1 1"
					"02"	"0 0 0"
				}
			}
	
			"RunScript"
			{
				"ScriptFile"	"util/SWATUtil.lua"
				"Function"		"SwapAbilitiesDataDriven"
				"on_ability"		"cyborg_pheromones"
				"off_ability"		"cyborg_pheromones_off"
			}
	        "RunScript"
			{
				"ScriptFile"	"scripts/vscripts/heroes/hero_cyborg/cyborg_pheromones.lua"
				"Function"		"AttractUndead"
	            "radius"        "%radius"
			}
		}
	}
	//=================================================================================================================
	// Demolitions: Biochemical Energy
	// This levels up with AdvGen and needs to level DOWN when lockdown gets toggled off
	//=================================================================================================================
	"demo_biochemical_energy"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				"ability_datadriven"
		"AbilityBehavior"		"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityUnitDamageType"  	"DAMAGE_TYPE_PURE"
		"AbilityUnitTargetTeam"		"DOTA_UNIT_TARGET_TEAM_BOTH"
		"AbilityUnitTargetType"		"DOTA_UNIT_TARGET_ALL"
		"AbilityTextureName"	"razor_static_link"
		"AbilityManaCost"		"0"
		"MaxLevel"              "18"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_stormspirit.vsndevts"
			"particle"					"particles/units/heroes/hero_tinker/tinker_laser.vpcf"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0"
		"AbilityCooldown"				"20"
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"                	"FIELD_FLOAT"
				"base_efficiency"  			".35"
			}
			"01"
			{
				"var_type"                	"FIELD_FLOAT"
				"max_life_percent"  		".5"
			}
			"01"
			{
				"var_type"                	"FIELD_FLOAT"
				"base_loss"  				".5"
			}
			"01"
			{
				"var_type"                	"FIELD_FLOAT"
				"loss_factor" 		 		"2"
			}
			"01"
			{
				"var_type"                	"FIELD_INTEGER"
				"min_eps"  					"2"
			}
		}
	
		"OnSpellStart"
		{
				"FireSound"
			{
				"Target"				"TARGET"
				"EffectName"			"Hero_StormSpirit.ElectricVortexCast"
			}
		
			"TrackingProjectile"
			{
				"Target"				"TARGET"
				"EffectName"			"particles/units/heroes/hero_tinker/tinker_laser.vpcf"
				"MoveSpeed"				"1100"
				"Dodgeable"				"1"
				"ProvidesVision"		"0"
				"SourceAttachment"		"DOTA_PROJECTILE_ATTACHMENT_ATTACK_2"
			}
		
			"RunScript"
			{
				"ScriptFile" 	"heroes/hero_demo/biochem.lua"
				"Function" 		"OnSpellStart"
				"Target" 		"TARGET"
			}
		}
	}
	//=================================================================================================================
	// Demolitions: Mini-Nuke
	//=================================================================================================================
	"demo_mini_nuke"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"              	"ability_datadriven"
		"AbilityBehavior"        	"DOTA_ABILITY_BEHAVIOR_POINT | DOTA_ABILITY_BEHAVIOR_AOE | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityUnitDamageType"  	"DAMAGE_TYPE_PHYSICAL"
		"AbilityUnitTargetTeam"		"DOTA_UNIT_TARGET_TEAM_BOTH"
		"AbilityUnitTargetType"		"DOTA_UNIT_TARGET_ALL"
		"AbilityTextureName"			"gyrocopter_homing_missile"
		"MaxLevel"						"3"
		"AoERadius" 				"%outer_radius"
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"  "00"
		"AbilityCastRange"  "65534"
		"FightRecapLevel"				"1"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"0"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"600 550 500"
	
		// Damage
		//-------------------------------------------------------------------------------------------------------------
		"AbilityDamage"					"6000"
	
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"		"soundevents/game_sounds_heroes/game_sounds_techies.vsndevts"
			"particle"			"particles/units/heroes/hero_ursa/ursa_earthshock.vpcf"
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_vengefulspirit.vsndevts"
		}
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"                	"FIELD_INTEGER"
				"outer_radius"              "1200 1400 1600"
			}
			"02"
			{
				"var_type"                	"FIELD_INTEGER"
				"inner_radius"              "336 372 372"
			}
			"03"
			{
				"var_type"                	"FIELD_INTEGER"
				"outer_damage"              "3000"
			}
			"04"
			{
				"var_type"                	"FIELD_INTEGER"
				"inner_damage"              "6000"
			}
		}
	
		"OnSpellStart"
		{
		
			"FireSound"
			{
				"EffectName"	"Hero_VengefulSpirit.MagicMissile"
				"Target" 		"CASTER"
			}
		
		
			"RunScript"
			{
				"ScriptFile"        "heroes/hero_demo/mini-nuke.lua"
				"Function"          "OnSpellStart"
				"Target"			"POINT"
				"duration"			"%duration"
				"inner_damage"		"%inner_damage"
				"inner_radius"      "%inner_radius"
				"outer_damage"      "%outer_damage"
				"outer_radius"	    "%outer_radius"
			}
		}
	
		"Modifiers"
		{
			"modifier_demo_mini_nuke_thinker"
			{
				"Duration" "%duration"
	
				"OnDestroy"
				{
				
				"FireEffect"
				{
				"Target"			"TARGET"
				"EffectName"			"particles/units/heroes/hero_ursa/ursa_earthshock.vpcf"
				"EffectAttachType"		"attach_hitloc"
				"EffectRadius"			"%outer_radius"
				}
					
				"FireSound"
				{
				"EffectName"			"Hero_Techies.Suicide"
				"Target"				"TARGET"
				}
				
				
				
					"RunScript"
					{
						"ScriptFile"        "heroes/hero_demo/mini-nuke.lua"
						"Function"          "setActive"
					}
	
					"Damage"
					{
						"Target"
						{
							"Center"  	"TARGET"
							"Radius" 	"%outer_radius"
							"Teams" 	"DOTA_UNIT_TARGET_TEAM_BOTH"
							"Types" 	"DOTA_UNIT_TARGET_ALL"
						}
						"Type"			"DAMAGE_TYPE_PHYSICAL"
						"Damage"		"%outer_damage"
					}
	
					"Damage"
					{
						"Target"
						{
							"Center"  	"TARGET"
							"Radius" 	"%inner_radius"
							"Teams" 	"DOTA_UNIT_TARGET_TEAM_BOTH"
							"Types" 	"DOTA_UNIT_TARGET_ALL"
						}
						"Type"			"DAMAGE_TYPE_PHYSICAL"
						"Damage"		"%inner_damage"
					}
				}
			}
		}
	}
	//=================================================================================================================
	    // Ability: Dummy unit - Ability that keeps this dummy unit from being detectable/attackable...etc
	    //=================================================================================================================
	    "dummy_passive"
	    {
	        "BaseClass"         "ability_datadriven"
	            "AbilityBehavior"   "DOTA_ABILITY_BEHAVIOR_PASSIVE"
	            "Modifiers"
	            {
	                "dummy_modifier"
	                {
	                    "Passive"   "1"
	                        "States"
	                        {
	                            "MODIFIER_STATE_NO_UNIT_COLLISION"  "MODIFIER_STATE_VALUE_ENABLED"
	                                "MODIFIER_STATE_NO_TEAM_MOVE_TO"    "MODIFIER_STATE_VALUE_ENABLED"
	                                "MODIFIER_STATE_NO_TEAM_SELECT" "MODIFIER_STATE_VALUE_ENABLED"
	                                "MODIFIER_STATE_COMMAND_RESTRICTED" "MODIFIER_STATE_VALUE_ENABLED"
	                                "MODIFIER_STATE_ATTACK_IMMUNE"  "MODIFIER_STATE_VALUE_ENABLED"
	                                "MODIFIER_STATE_INVULNERABLE"   "MODIFIER_STATE_VALUE_ENABLED"
	                                //"MODIFIER_STATE_FLYING"   "MODIFIER_STATE_VALUE_ENABLED"
	                                "MODIFIER_STATE_NOT_ON_MINIMAP" "MODIFIER_STATE_VALUE_ENABLED"
	                                "MODIFIER_STATE_UNSELECTABLE"   "MODIFIER_STATE_VALUE_ENABLED"
	                                "MODIFIER_STATE_OUT_OF_GAME"    "MODIFIER_STATE_VALUE_ENABLED"
	                                "MODIFIER_STATE_NO_HEALTH_BAR"         "MODIFIER_STATE_VALUE_ENABLED"
	                        }
	                }
	            }
	    }
	//=================================================================================================================
	// Ability: Burninating (the country side...burninating the peasants...)
	// Applies the "burninating" ability, which increases damage and applies a burning effect
	//=================================================================================================================
	"enemy_common_burninating"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"		                "ability_datadriven"
	    "AbilityBehavior"	        	"DOTA_ABILITY_BEHAVIOR_NO_TARGET"
	    "AbilityTextureName"        	"invoker_exort"
	    "MaxLevel"	"2"
	
	      "AbilitySpecial"
	      {
	          "01"
	          {
	             "var_type"              "FIELD_INTEGER"
	             "bonus_damage"           "100 250"
	          }
	      }
	
	    "precache"
	    {
	        "particle"			"particles/units/heroes/hero_phoenix/phoenix_icarus_dive_burn_debuff.vpcf"
	    }
	
	
	    "Modifiers"
	    {
	
	        "modifier_enemy_common_burninating"
	        {
	            "Passive"               "1"
	            "IsPurgable"            "0"
	            "IsHidden"              "0"
	
	            "OnCreated"
	            {
	                "FireEffect"
	                {
	                    "EffectName"	"particles/units/heroes/hero_phoenix/phoenix_icarus_dive_burn_debuff.vpcf"
	                    "EffectAttachType"	"follow_origin"
	                    "Target"		"CASTER"
	                }
	            }
	
	            "OnDestroy"
	            {
	                "FireEffect"
	                {
	                    "EffectName"	"particles/units/heroes/hero_phoenix/phoenix_icarus_dive_burn_debuff.vpcf"
	                    "EffectAttachType"	"follow_origin"
	                    "Target"		"CASTER"
	                }
	            }
	
	            "Properties"
	            {
	                "MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE" "%bonus_damage"
	            }
	        }
	    }
	}
	//=================================================================================================================
	// Ability: Radinating
	// Units with this carry a radiation fragment - giving them more armor and energy regen
	//=================================================================================================================
	"enemy_common_radinating"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"		                "ability_datadriven"
	    "AbilityBehavior"	        	"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	    "AbilityTextureName"        	"earth_spirit_petrify"
	    "MaxLevel"	"1"
	
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"				"FIELD_INTEGER"
	            "bonus_armor"		    "10"
	         }
	         "02"
	         {
	             "var_type"          "FIELD_INTEGER"
	             "bonus_mana"        "250"
	         }
	      }
	
	    "precache"
	    {
	        "particle"  	    "particles/econ/items/undying/undying_manyone/undying_tombstone_manyone_eye_rope.vpcf"
	        "particle"   	    "particles/econ/items/undying/undying_manyone/undying_pale_tower_destruct_flash.vpcf"
	    }
	
	
	    "Modifiers"
	    {
	        "modifier_enemy_common_radinating"
	        {
	            "Passive"               "1"
	            "IsPurgable"            "0"
	            "IsHidden"              "0"
	
	            "OnCreated"
	            {
	                "FireEffect"
	                {
	                    "EffectName"	    "particles/econ/items/undying/undying_manyone/undying_tombstone_manyone_eye_rope.vpcf"
	                    "EffectAttachType"	"follow_overheard"
	                    "Target"		"CASTER"
	                }
	            }
	
	            "OnDeath"
	            {
	                "RunScript"
	                {
	                    "ScriptFile"            "abilities/enemy_radinating.lua"
	                    "Function"              "modifier_spawn_rad"
	                }
	
	                "FireEffect"
	                {
	                    "EffectName"	    "particles/econ/items/undying/undying_manyone/undying_pale_tower_destruct_flash.vpcf"
	                    "EffectAttachType"	"follow_origin"
	                    "Target"		"CASTER"
	                }
	            }
	
	            "Properties"
	            {
	                "MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS" "%bonus_armor"
	                // Doesn't work on non heroes :(
	                "MODIFIER_PROPERTY_MANA_BONUS"          "%bonus_mana"
	            }
	        }
	    }
	}
	//=================================================================================================================
	// Ability: Radinating Rad Bolt
	// Fires a bolt of radiation at the target
	// Level 1: For grotlings / lesser radinating enemies
	// Level 2: For normal radinating (including zombies)
	//=================================================================================================================
	"enemy_common_radinating_rad_bolt"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"             "ability_datadriven"
	    "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
	    "AbilityUnitTargetTeam"         "DOTA_UNIT_TARGET_TEAM_ENEMY"
	    "AbilityUnitTargetType"         "DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
	    "AbilityUnitDamageType"         "DAMAGE_TYPE_MAGICAL"
	    "SpellImmunityType"             "SPELL_IMMUNITY_ENEMIES_NO"
	    "FightRecapLevel"               "1"
	    "AbilityTextureName"            "skeleton_king_hellfire_blast"
	
	    // Precache
	    //-------------------------------------------------------------------------------------------------------------
	    "precache"
		{
			"soundfile"	"sounds/weapons/hero/skeleton_king/hellfire_blast.vsnd"
	        "soundfile"	"sounds/weapons/hero/warlock/shadowword_cast_damage.vsnd"
			"particle"	"particles/units/heroes/hero_skeletonking/skeletonking_hellfireblast.vpcf"
			"particle"	"particles/units/heroes/hero_skeletonking/skeletonking_hellfireblast_explosion.vpcf"
			"particle"	"particles/units/heroes/hero_skeletonking/skeletonking_hellfireblast_debuff.vpcf"
			"particle"	"particles/units/heroes/hero_skeletonking/skeletonking_hellfireblast_warmup.vpcf"
		}
	
	    // Casting
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilityCastRange"              "1200 1600"
	    "AbilityCastPoint"              "0.3 0.3"
	
	    // Time
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilityCooldown"               "10.0 10.0"
	
	    // Damage.
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilityDamage"                 "200 500"
	
	    // Cost
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilityManaCost"               "25 25"
	
	    // Special
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilitySpecial"
	    {
	        "01"
	        {
	            "var_type"              "FIELD_INTEGER"
	            "magic_missile_speed"   "1600"
	        }
	    }
	
	    "OnSpellStart"
	    {
	
	        "FireSound"
	        {
	            "EffectName"	"sounds/weapons/hero/warlock/shadowword_cast_damage.vsnd"
	            "Target"		"CASTER"
	        }
	
	        "TrackingProjectile"
	        {
	            "Target"            "TARGET"
	            "EffectName"       	"particles/units/heroes/hero_skeletonking/skeletonking_hellfireblast.vpcf"
	            "Dodgeable"         "1"
	            "ProvidesVision"    "0"
	            "VisionRadius"     	"0"
	            "MoveSpeed"         "%magic_missile_speed"
	            "SourceAttachment"  "DOTA_PROJECTILE_ATTACHMENT_ATTACK_1"
	        }
	    }
	
	    "OnAbilityPhaseStart"
	    {
	        "FireEffect"
	        {
	            "EffectName"        "particles/units/heroes/hero_skeletonking/skeletonking_hellfireblast_warmup.vpcf"
	            "EffectAttachType"  "start_at_customorigin"
	
	            "ControlPointEntities"
	            {
	                "CASTER"	"attach_attack1"
	            }
	        }
	    }
	
	    "OnProjectileHitUnit"
	    {
	        "DeleteOnHit"   "1"
	
	        "Damage"
	        {
	            "Target"        "TARGET"
	            "Type"          "DAMAGE_TYPE_MAGICAL"
	            "Damage"        "%AbilityDamage"
	        }
	
	        "FireSound"
	        {
	            "EffectName"	"sounds/weapons/hero/skeleton_king/hellfire_blast.vsnd"
	            "Target"		"CASTER"
	        }
	
	        "ApplyModifier"
	        {
	            "ModifierName"	"modifier_common_radinating_rad_bolt"
	            "Target"		"TARGET"
	        }
	
	        "FireEffect"
			{
				"EffectName"		"particles/units/heroes/hero_skeletonking/skeletonking_hellfireblast_explosion.vpcf"
				"EffectAttachType"	"follow_origin"
				"Target"			"TARGET"
	
				//CP3 needs to be attached to the target hit
				"ControlPointEntities"
				{
					"TARGET"		"attach_hitloc"
					"TARGET"		"attach_hitloc"
					"TARGET"		"attach_hitloc"
					"TARGET"		"attach_hitloc"
				}
			}
	    }
	
		"Modifiers"
		{
	
	        // This modifier doesn't do anything. Just makes the unit glow a bit, indicating it was hit
			"modifier_common_radinating_rad_bolt"
			{
				"IsDebuff"			"1"
				"Duration"			"1.5"
	
				"EffectName"		"particles/units/heroes/hero_skeletonking/skeletonking_hellfireblast_debuff.vpcf"
				"EffectAttachType"	"follow_origin"
			}
		}
	}
	//=================================================================================================================
	// Ability: TNT
	// On death, unit explodes for massive damage
	//=================================================================================================================
	"enemy_common_tnt"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"                     "ability_datadriven"
	    "AbilityBehavior"                      "DOTA_ABILITY_BEHAVIOR_PASSIVE"
	    "AbilityTextureName"            "techies_remote_mines"
	    "MaxLevel"     "1"
	
	    "AbilitySpecial"
	    {
	        "01"
	        {
	            "var_type"			"FIELD_INTEGER"
	            "damage_full"		"600"
	        }
	
	        "02"
	        {
	            "var_type"		    "FIELD_INTEGER"
	            "radius_full"	        "120"
	        }
	
	        "03"
	        {
	            "var_type"			"FIELD_INTEGER"
	            "damage_partial"		"200"
	        }
	
	        "04"
	        {
	            "var_type"		    "FIELD_INTEGER"
	            "radius_partial"	        "230"
	        }
	    }
	
	    "precache"
	    {
	        "soundfile"     "soundevents/game_sounds_heroes/game_sounds_techies.vsndevts"
	        "particle"	    "particles/units/heroes/hero_ogre_magi/ogre_magi_ignite_debuff_smoke.vpcf"
	        "particle"	    "particles/units/heroes/hero_techies/techies_remote_mines_detonate.vpcf"
	    }
	
	    "Modifiers"
	    {
	
	        "modifier_enemy_common_tnt"
	        {
	            "Passive" "1"
	
	            "EffectName"        "particles/units/heroes/hero_warlock/golem_ambient_fire_mane_smoke.vpcf"
	            "EffectAttachType"  "follow_attack"
	
	            "OnCreated"
				{
					"AttachEffect"
					{
						"Target"				"CASTER"
						"EffectName"			"particles/units/heroes/hero_ogre_magi/ogre_magi_ignite_debuff_smoke.vpcf"
						"EffectAttachType"		"start_at_customorigin"
						"ControlPointEntities"
						{
							"CASTER"			"attach_overhead"
						}
					}
	
				}
	
	            "OnDeath"
	            {
	
	                "FireEffect"
					{
						"EffectName"        "particles/units/heroes/hero_techies/techies_remote_mines_detonate.vpcf"
						"EffectAttachType"  "follow_hitloc"
						"Target"
						{
							"Center"	"UNIT"
							"Flags"		"DOTA_UNIT_TARGET_FLAG_DEAD"
						}
					}
	
	                "FireSound"
					{
						"EffectName"	"Hero_Techies.RemoteMine.Detonate"
						"Target"
						{
							"Center"	"CASTER"
							"Flags"		"DOTA_UNIT_TARGET_FLAG_DEAD"
						}
					}
	
	                "ActOnTargets"
	                {
	                    "Target"
	                    {
	                        "Center"   "UNIT"
	                        "Radius"   "%radius_full"
	                        "Teams"    "DOTA_UNIT_TARGET_TEAM_BOTH"
	                        "Types"    "DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_BUILDING"
	                        "Flags"     "DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES"
	                    }
	
	                    "Action"
	                    {
	                        "RunScript"
	                        {
	                            "ScriptFile"            "abilities/enemy_common_tnt.lua"
	                            "Function"              "deal_raw_damage"
	                            "Damage"                "%damage_full"
	                        }
	                    }
	                }
	
	                "ActOnTargets"
	                {
	                    "Target"
	                    {
	                        "Center"   "UNIT"
	                        "Radius"   "%radius_partial"
	                        "Teams"    "DOTA_UNIT_TARGET_TEAM_BOTH"
	                        "Types"    "DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_BUILDING"
	                        "Flags"     "DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES"
	                    }
	
	                    "Action"
	                    {
	                        "RunScript"
	                        {
	                            "ScriptFile"            "abilities/enemy_common_tnt.lua"
	                            "Function"              "deal_raw_damage"
	                            "Damage"                "%damage_partial"
	                        }
	                    }
	                }
	            }
	        }
	
	    }
	}
	//=================================================================================================================
	// Ability: Toxic Aura
	// Units with this emit an aura that damages and slows nearby enemies
	//=================================================================================================================
	"enemy_common_toxic_aura"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"		                "ability_datadriven"
	    "AbilityBehavior"	        	"DOTA_ABILITY_BEHAVIOR_NO_TARGET"
	    "AbilityTextureName"        	"undying_decay"
	    "AbilityUnitDamageType"			"DAMAGE_TYPE_MAGICAL"
	    "MaxLevel"	"1"
	
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"				"FIELD_FLOAT"
	            "damage_per_second"		"3.25"
	         }
	         "02"
	         {
	             "var_type"          "FIELD_INTEGER"
	             "aura_radius"     "400"
	         }
	         "03"
	         {
	             "var_type"                  "FIELD_FLOAT"
	             "aura_damage_interval"      "0.1"
	         }
	         "04"
	         {
	             "var_type"                  "FIELD_INTEGER"
	             "movespeed_percentage"      "-20"
	         }
	      }
	
	    "precache"
		{
			"particle"			"particles/units/heroes/hero_viper/viper_poison_debuff.vpcf"
		}
	
	
	    "Modifiers"
	    {
	        "modifier_common_toxic_aura"
	        {
	            "Passive"               "1"
	            "IsPurgable"            "0"
	            "IsHidden"              "0"
	            "Aura"                  "modifier_common_toxic_aura_effect"
	            "Aura_Radius"           "%aura_radius"
	            "Aura_Teams"            "DOTA_UNIT_TARGET_TEAM_ENEMY"
	            "Aura_Types"            "DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_HERO"
	
	            "OnCreated"
				{
					"FireEffect"
					{
	                    "EffectName"	"particles/units/heroes/hero_viper/viper_poison_debuff.vpcf"
						"EffectAttachType"	"follow_origin"
						"Target"		"CASTER"
					}
				}
	
				"OnDestroy"
				{
					"FireEffect"
					{
	                    "EffectName"	"particles/units/heroes/hero_viper/viper_poison_debuff.vpcf"
						"EffectAttachType"	"follow_origin"
						"Target"		"CASTER"
					}
				}
	        }
	
	        "modifier_common_toxic_spawn_rat_on_death"
	        {
	            "Passive"           "1"
	            "IsHidden"          "0"
	            "IsBuff"            "0"
	            "IsDebuff"          "1"
	            "IsPurgable"        "0"
	
	            "OnDestroy"
	            {
	                "RunScript"
	                {
	                    "ScriptFile"            "abilities/enemy_toxic_damage.lua"
	                    "Function"              "drop_rat"
	                }
	            }
	        }
	
	        "modifier_common_toxic_aura_effect"
	        {
	            "Passive"           "0"
	            "IsHidden"          "0"
	            "IsBuff"            "0"
	            "IsDebuff"          "1"
	            "IsPurgable"        "0"
	
	            "ThinkInterval"         "%aura_damage_interval"
	            "OnIntervalThink"
	            {
	                "RunScript"
	                {
	                    "ScriptFile"            "abilities/enemy_toxic_damage.lua"
	                    "Function"              "modifier_enemy_toxic_damage"
	                    "DamagePerSecond"      "%damage_per_second"
	                    "DamageInterval"        "%aura_damage_interval"
	                }
	            }
	
	            "EffectName"    "particles/units/heroes/hero_viper/viper_poison_debuff.vpcf"
	            "EffectAttachType"  "follow_origin"
	
	            "Properties"
	            {
	                "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE"  "%movespeed_percentage"
	            }
	        }
	    }
	}
	//=================================================================================================================
	// Ability: Toxic Aura (rat)
	// Rats with this emit an aura that damages and slows nearby enemies
	// (This one is very similar to the generic one, except the effect looks a bit different (for the rat) and it doesn't spawn a rat on death
	//=================================================================================================================
	"enemy_rat_toxic_aura"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"		                "ability_datadriven"
	    "AbilityBehavior"	        	"DOTA_ABILITY_BEHAVIOR_NO_TARGET"
	    "AbilityTextureName"        	"undying_decay"
	    "AbilityUnitDamageType"			"DAMAGE_TYPE_MAGICAL"
	    "MaxLevel"	"1"
	
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"				"FIELD_FLOAT"
	            "damage_per_second"		"3.25"
	         }
	         "02"
	         {
	             "var_type"          "FIELD_INTEGER"
	             "aura_radius"     "300"
	         }
	         "03"
	         {
	             "var_type"                  "FIELD_FLOAT"
	             "aura_damage_interval"      "0.1"
	         }
	         "04"
	         {
	             "var_type"                  "FIELD_INTEGER"
	             "movespeed_percentage"      "-20"
	         }
	      }
	
	    "precache"
	    {
	        "particle"			"particles/units/heroes/hero_viper/viper_poison_debuff.vpcf"
	    }
	
	
	    "Modifiers"
	    {
	        "modifier_rat_toxic_aura"
	        {
	            "Passive"               "1"
	            "IsPurgable"            "0"
	            "IsHidden"              "0"
	            "Aura"                  "modifier_rat_toxic_aura_effect"
	            "Aura_Radius"           "%aura_radius"
	            "Aura_Teams"            "DOTA_UNIT_TARGET_TEAM_ENEMY"
	            "Aura_Types"            "DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_HERO"
	
	            "EffectName"	"particles/units/heroes/hero_viper/viper_poison_debuff.vpcf"
	            "EffectAttachType"	"follow_overhead"
	
	            "OnCreated"
	            {
	                "FireEffect"
	                {
	                    "EffectName"	"particles/units/heroes/hero_viper/viper_poison_debuff.vpcf"
	                    "EffectAttachType"	"follow_overhead"
	                    "Target"		"CASTER"
	                    "ControlPoints"
	                   {
	                       "00" "0 0 0"
	                       "01" "200 1 1"   // Radius
	                       "15" "255 200 0" // Color
	                       "16" "1 0 0"
	                   }
	                }
	            }
	
	            "OnDestroy"
	            {
	                "FireEffect"
	                {
	                    "EffectName"	"particles/units/heroes/hero_viper/viper_poison_debuff.vpcf"
	                    "EffectAttachType"	"follow_origin"
	                    "Target"		"CASTER"
	                }
	            }
	        }
	
	        "modifier_rat_toxic_aura_effect"
	        {
	            "Passive"           "0"
	            "IsHidden"          "0"
	            "IsBuff"            "0"
	            "IsDebuff"          "1"
	            "IsPurgable"        "0"
	
	            "ThinkInterval"         "%aura_damage_interval"
	            "OnIntervalThink"
	            {
	                "RunScript"
	                {
	                    "ScriptFile"            "abilities/enemy_toxic_damage.lua"
	                    "Function"              "modifier_enemy_toxic_damage"
	                    "DamagePerSecond"      "%damage_per_second"
	                    "DamageInterval"        "%aura_damage_interval"
	                }
	            }
	
	            "EffectName"    "particles/units/heroes/hero_viper/viper_poison_debuff.vpcf"
	            "EffectAttachType"  "follow_origin"
	
	            "Properties"
	            {
	                "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE"  "%movespeed_percentage"
	            }
	        }
	    }
	}
	//=================================================================================================================
	// Ability: Zombie Brainlust
	// Increases zombie movement speed and attack speed temporarily
	//=================================================================================================================
	"enemy_zombie_brainlust"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"				        "ability_datadriven"
	    "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE"
	    "AbilityTextureName"			"ogre_magi_bloodlust"
	    "MaxLevel"	"5"
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"0"
		"AbilityCastPoint"				"0.45"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"20 15 15 15 15"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"50 50 40 40 40"
	
	    "precache"
	    {
	        "particle"	    "particles/units/heroes/hero_ogre_magi/ogre_magi_bloodlust_cast.vpcf"
	        "particle"	    "particles/units/heroes/hero_ogre_magi/ogre_magi_bloodlust_buff.vpcf"
	    }
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_FLOAT"
				"duration"			"15 20 20 20 20"
			}
	
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"bonus_movement_speed"		"20 40 50 200 300"
			}
	
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"bonus_attack_speed"	"50 150 200 200 200"
			}
		}
	
	    "OnSpellStart"
		{
			"FireEffect"
		    {
		        "EffectName"       "particles/units/heroes/hero_ogre_magi/ogre_magi_bloodlust_cast.vpcf"
		        "EffectAttachType" "follow_customorigin"
		        "Target"           "CASTER"
		        "ControlPointEntities"
		        {
		            "CASTER" "attach_attack1" //Start
		            "CASTER" "attach_origin"  //Velocity noise, not used
		            "CASTER" "attach_attack2" //CASTER or TARGET?
		            "CASTER" "attach_hitloc"  //Hit
		        }
		    }
	
	        "ApplyModifier"
	        {
	           "ModifierName" "modifier_enemy_zombie_brainlust"
	           "Target"       "CASTER"
	           "Duration"     "%duration"
	        }
		}
	
	    "Modifiers"
	    {
	        "modifier_enemy_zombie_brainlust"
	        {
	            "IsBuff"                "1"
	            "IsPurgable"            "0"
	            "IsHidden"              "0"
	            "Duration"              "%duration"
	
	            "EffectName"            "particles/units/heroes/hero_ogre_magi/ogre_magi_bloodlust_buff.vpcf"
	            "EffectAttachType"      "follow_origin"
	
	            "Properties"
	            {
	                "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE" "%bonus_movement_speed"
	                "MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT" "%bonus_attack_speed"
	            }
	        }
	    }
	}
	//=================================================================================================================
	// Ability: Zombie Phase Shift
	// Increases zombie movement speed and attack speed temporarily
	//=================================================================================================================
	"enemy_zombie_phase_shift"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"                     "ability_datadriven"
	    "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT | DOTA_ABILITY_BEHAVIOR_CHANNELLED | DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK | DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES"
	    "AbilityTextureName"            "puck_phase_shift"
	    "MaxLevel"	"3"
	
	    // Casting
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilityCastPoint"              "0"
	    "AbilityChannelTime"            "0.75 1.25 1.50"
	
	    // Time
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilityCooldown"               "1.0 1.0 0.0"
	
	    // Cost
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilityManaCost"               "40 40 20"
	
	    // Special
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilitySpecial"
	    {
	        "01"
	        {
	            "var_type"                  "FIELD_FLOAT"
	            "duration"                  "0.75 1.25 1.50"
	        }
	    }
	
	    // Data driven
	    //-------------------------------------------------------------------------------------------------------------
	    "precache"
	    {
	        "particle"                  "particles/units/heroes/hero_puck/puck_phase_shift.vpcf"
	    }
	
	    "OnSpellStart"
	    {
	        "ApplyModifier"
	        {
	            "ModifierName"  "modifier_enemy_zombie_phase_shift"
	            "Target"        "CASTER"
	        }
	    }
	
	    "OnChannelFinish"
	    {
	        "RemoveModifier"
	        {
	            "ModifierName"  "modifier_enemy_zombie_phase_shift"
	            "Target"        "CASTER"
	        }
	    }
	
	    "Modifiers"
	    {
	        "modifier_enemy_zombie_phase_shift"
	        {
	            "Duration"      "%duration"
	
	            "EffectName"        "particles/units/heroes/hero_puck/puck_phase_shift.vpcf"
	            "EffectAttachType"  "attach_origin"
	
	            "OnCreated"
	            {
	                "RunScript"
	                {
	                    "ScriptFile"    "abilities/enemy_zombie_phase_shift.lua"
	                    "Function"          "HideCaster"
	                }
	            }
	
	            "OnDestroy"
	            {
	
	                "RunScript"
	                {
	                    "ScriptFile"    "abilities/enemy_zombie_phase_shift.lua"
	                    "Function"          "ShowCaster"
	                }
	            }
	
	            "States"
	            {
	            //  "MODIFIER_STATE_INVULNERABLE"           "MODIFIER_STATE_VALUE_ENABLED"  // Don't use these state for a channeling ability.
	            //  "MODIFIER_STATE_OUT_OF_GAME"            "MODIFIER_STATE_VALUE_ENABLED"
	
	                "MODIFIER_STATE_ATTACK_IMMUNE"          "MODIFIER_STATE_VALUE_ENABLED"
	                "MODIFIER_STATE_MAGIC_IMMUNE"           "MODIFIER_STATE_VALUE_ENABLED"
	                "MODIFIER_STATE_UNSELECTABLE"           "MODIFIER_STATE_VALUE_ENABLED"
	                "MODIFIER_STATE_NO_HEALTH_BAR"          "MODIFIER_STATE_VALUE_ENABLED"
	            }
	        }
	    }
	}
	//=================================================================================================================
	// Ability: Zombie Regeneration
	// Allows zombies to self heal
	//=================================================================================================================
	"enemy_zombie_regeneration"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"				        "ability_datadriven"
	    "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE"
	    "AbilityTextureName"			"rubick_spell_steal"
	    "MaxLevel"	"5"
	
	    // Casting
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilityCastRange"				"0"
	    "AbilityCastPoint"				"0.45"
	
	    // Time
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilityCooldown"				"0 0 0"
	
	    // Cost
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilityManaCost"				"30 30 20"
	
	    "precache"
	    {
	        "particle"	    "particles/units/heroes/hero_bloodseeker/bloodseeker_bloodbath_heal.vpcf"
	    }
	
	    // Special
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilitySpecial"
	    {
	        "01"
	        {
	            "var_type"			"FIELD_FLOAT"
	            "heal"			"500 1000 3000"
	        }
	    }
	
	    "OnSpellStart"
	    {
	        "FireEffect"
	        {
	            "EffectName"       "particles/units/heroes/hero_bloodseeker/bloodseeker_bloodbath_heal.vpcf"
	            "EffectAttachType" "follow_origin"
	            "Target"           "CASTER"
	        }
	
	        "Heal"
	        {
	            "Target" 		"CASTER"
	            "HealAmount"	"%heal"
	        }
	
	    }
	}
	//=================================================================================================================
	// Ability: Mana_Drain_Badly_Damaged (Power Core)
	//=================================================================================================================
	"game_power_core_badly_damaged"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
	      "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	      "AbilityUnitTargetTeam"		"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
	      "AbilityTextureName"			"crystal_maiden_brilliance_aura"
	      "MaxLevel"                 "1"
	      // Special
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"			"FIELD_FLOAT"
	            "mana_regen"		"-45"
	         }
	      }
	      // Data driven
	      //-------------------------------------------------------------------------------------------------------------
	      "Modifiers"
	      {
	         "modifier_game_power_core_degen"
	         {
	            "Passive"				"1"
	            "IsPurgable"			"0"
	            "IsHidden"				"0"
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"		"%mana_regen"
	            }
	         }
	      }
	   }
	//=================================================================================================================
	// Ability: Power_Core_Damaged (Power Core)
	//=================================================================================================================
	"game_power_core_damaged"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
	      "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	      "AbilityUnitTargetTeam"		"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
	      "AbilityTextureName"			"crystal_maiden_brilliance_aura"
	      "MaxLevel"                 "1"
	      // Special
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"			"FIELD_FLOAT"
	            "mana_regen"		"-30"
	         }
	      }
	      // Data driven
	      //-------------------------------------------------------------------------------------------------------------
	      "Modifiers"
	      {
	         "modifier_game_power_core_degen"
	         {
	            "Passive"				"1"
	            "IsPurgable"			"0"
	            "IsHidden"				"0"
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"		"%mana_regen"
	            }
	         }
	      }
	   }
	//=================================================================================================================
	// Ability: Mana_Drain (Power Core)
	//=================================================================================================================
	"game_power_core_mana_drain"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_CHANNELLED | DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"AbilityUnitTargetFlags"		"DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_NO"
		"AbilityTextureName"			"lion_mana_drain"
	      "MaxLevel"                 "1"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_lion.vsndevts"
			"particle"			"particles/units/heroes/hero_lion/lion_spell_mana_drain.vpcf"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"500"
		"AbilityCastPoint"				"0.3"
		"AbilityChannelTime"			"30.1"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"0.5"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"
	
		// Stats
		//-------------------------------------------------------------------------------------------------------------
		"AbilityModifierSupportValue"	"5.0"	// better then the mana cost implies
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_FLOAT"
				"duration"					"30.0"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"mana_per_second"			"60"
			}
			"03"
			{
				"var_type"					"FIELD_INTEGER"
				"break_distance"			"650"
			}
			"04"
			{
				"var_type"					"FIELD_FLOAT"
				"tick_interval"			"0.25"
			}
		}
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Lion.ManaDrain"
				"Target"		   "TARGET"
			}
	
			"ApplyModifier"
			{
				"ModifierName"	"modifier_mana_drain"
				"Target"			"TARGET"
			}
		}
		"OnChannelInterrupted"
		{
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/units/power_core/power_core_mana_drain.lua"
				"Function"		"mana_drain_stop_sound"
				"sound"			"Hero_Lion.ManaDrain"
			}
			"RemoveModifier"
			{
				"ModifierName"	"modifier_mana_drain"
				"Target"			"TARGET"
			}
		}
		"OnChannelFinish"
		{
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/units/power_core/power_core_mana_drain.lua"
				"Function"		"mana_drain_stop_sound"
				"sound"			"Hero_Lion.ManaDrain"
			}
			"RemoveModifier"
			{
				"ModifierName"	"modifier_mana_drain"
				"Target"			"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_mana_drain"
			{
				"IsHidden"	"1"
	            "IsDebuff"	"1"
				"Duration"	"%duration"
	
				"OnCreated"
				{
					"AttachEffect"
					{
						"EffectName"	      "particles/units/heroes/hero_lion/lion_spell_mana_drain.vpcf"
						"EffectAttachType"	"start_at_customorigin"
						"Target"		         "TARGET"
	
						"ControlPointEntities"
						{
							"TARGET"	"attach_hitloc"
							"CASTER"	"attach_hitloc"
						}
					}
				}
				"ThinkInterval"	"%tick_interval"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/units/power_core/power_core_mana_drain.lua"
						"Function"		"mana_drain"
					}
				}
			}
	         "modifier_mana_drain_autocast"
	         {
	            "Passive"   "1"
	            "IsHidden"  "1"
	            "ThinkInterval"   "1"
	            "OnIntervalThink"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"   "scripts/vscripts/units/power_core/power_core_mana_drain.lua"
	                  "Function"     "auto_cast"
	               }
	            }
	         }
		}
	}
	//=================================================================================================================
	// Ability: Mana_Drain_Severly_Damaged (Power Core)
	//=================================================================================================================
	"game_power_core_severly_damaged"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
	      "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	      "AbilityUnitTargetTeam"		"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
	      "AbilityTextureName"			"crystal_maiden_brilliance_aura"
	      "MaxLevel"                 "1"
	      // Special
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"			"FIELD_FLOAT"
	            "mana_regen"		"-55"
	         }
	      }
	      // Data driven
	      //-------------------------------------------------------------------------------------------------------------
	      "Modifiers"
	      {
	         "modifier_game_power_core_degen"
	         {
	            "Passive"				"1"
	            "IsPurgable"			"0"
	            "IsHidden"				"0"
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"		"%mana_regen"
	            }
	         }
	      }
	   }
	//=================================================================================================================
	    // Invulnerability && Unselectability && NO Health bar (ex: radlets)
	    //=================================================================================================================
	    "game_radiation_radlet"
	    {
	        // General
	        //-------------------------------------------------------------------------------------------------------------
	        "BaseClass"                     "ability_datadriven"
	        "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
	        "AbilityTextureName"            "disruptor_glimpse"
	
	        // Modifiers
	        //-------------------------------------------------------------------------------------------------------------
	        "Modifiers"
	        {
	            "Invulnerable"
	            {
	                "Passive"                       "1"
	                "States"
				{
					"MODIFIER_STATE_NO_UNIT_COLLISION"	"MODIFIER_STATE_VALUE_ENABLED"
					//"MODIFIER_STATE_NO_TEAM_MOVE_TO"	"MODIFIER_STATE_VALUE_ENABLED"
					//"MODIFIER_STATE_NO_TEAM_SELECT"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_COMMAND_RESTRICTED"	"MODIFIER_STATE_VALUE_ENABLED"
					//"MODIFIER_STATE_ATTACK_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_INVULNERABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					//"MODIFIER_STATE_FLYING"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NOT_ON_MINIMAP"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_UNSELECTABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NO_HEALTH_BAR"		   "MODIFIER_STATE_VALUE_ENABLED"
				}
	            }
	        }
	    }
	//=================================================================================================================
	    // Rad damage for exploding rads - BOOM!
	    //=================================================================================================================
	    "game_radiation_rad_explosion"
	    {
	        // General
	        //-------------------------------------------------------------------------------------------------------------
	        "BaseClass"                     "ability_datadriven"
	        "AbilityBehavior"                      "DOTA_ABILITY_BEHAVIOR_PASSIVE"
	        "AbilityTextureName"            "disruptor_glimpse"
	        "MaxLevel"     "1"
	
	        "precache"
	        {
	            "particle"	    "particles/units/heroes/hero_techies/techies_land_mine_explode.vpcf"
	        }
	
	        "Modifiers"
	        {
	
	            "modifier_rad_frag_explosion_datadriven"
	            {
	                "Passive" "1"
	
	                "OnDeath"
	                {
	                    "FireEffect"
	                    {
	                        "EffectName"        "particles/units/heroes/hero_techies/techies_land_mine_explode.vpcf"
	                        "EffectAttachType"  "follow_hitloc"
	                        "Target"
	                        {
	                            "Center"   "UNIT"
	                            "Flags"            "DOTA_UNIT_TARGET_FLAG_DEAD"
	                        }
	                    }
	
	                    "ActOnTargets"
	                    {
	                        "Target"
	                        {
	                            "Center"   "UNIT"
	                            "Radius"   "144"
	                            "Teams"    "DOTA_UNIT_TARGET_TEAM_BOTH"
	                            "Types"    "DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_BUILDING"
	                            "Flags"     "DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES"
	                        }
	
	                        "Action"
	                        {
	                            "Damage"
	                            {
	                                "Target"
	                                {
	                                    "Center"   "TARGET"
	                                    "Flags"     "DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES"
	                                }
	                                "Type"                 "DAMAGE_TYPE_PHYSICAL"
	                                "MinDamage"            "2000"
	                                "MaxDamage"            "4000"
	                            }
	                        }
	                    }
	                }
	            }
	
	        }
	    }
	//=================================================================================================================
	// Ability: Radiation Fragment
	//=================================================================================================================
	"game_radiation_rad_frag"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"		"ability_datadriven"
		"AbilityBehavior"		"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"AbilityTextureName" 	"viper_corrosive_skin"
		"MaxLevel"	"1"
	
		"Modifiers"
		{
			"modifier_rad_frag_datadriven"
			{
				"Passive" "1"
	                "States"
	                {
	                    "MODIFIER_STATE_NOT_ON_MINIMAP"      "MODIFIER_STATE_VALUE_ENABLED"
	                }
	
				"OnDeath"
	            {
	               "RunScript"
	               {
	                  "ScriptFile" "units/rad_frag.lua"
	                  "Function"   "RadRemoved"
	               }
	            }
			}
		}
	}
	//=================================================================================================================
	// Ability: Heavy Ordnance XLR8
	//=================================================================================================================
	"ho_construct_droid"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"BaseClass"						"ability_datadriven"
		"MaxLevel"						"6"
		"AbilityTextureName"			"tinker_march_of_the_machines"
		
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0.3"

		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"250 500 750 1000 1250 9999"
        "AbilityCooldown"               "20"
		
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"							"FIELD_INTEGER"
				"weapon_plasma_rounds_mini_constant"	"-1"
			}
			"02"			
			{			
				"var_type"							"FIELD_INTEGER"
				"weapon_plasma_rounds_mini_factor"	"1"
			}
			"03"
			{
				"var_type"							"FIELD_INTEGER"
				"primary_ho_plasma_shield_constant"	"0"
			}
			"04"			
			{			
				"var_type"							"FIELD_INTEGER"
				"primary_ho_plasma_shield_factor"	"2"
			}
			"05"
			{
				"var_type"							"FIELD_INTEGER"
				"primary_minidroid_storage_cells_constant"	"0"
			}
			"06"			
			{			
				"var_type"							"FIELD_INTEGER"
				"primary_minidroid_storage_cells_factor"	"2"
			}
			"17"
			{
				"var_type"							"FIELD_INTEGER"
				"minidroid_ammo_constant"			"0"
			}
			"18"			
			{			
				"var_type"							"FIELD_INTEGER"
				"minidroid_ammo_factor"				"1"
			}
			"19"
			{
				"var_type"							"FIELD_INTEGER"
				"minidroid_integrity_constant"		"0"
			}
			"20"			
			{			
				"var_type"							"FIELD_INTEGER"
				"minidroid_integrity_factor"		"1"
			}
			"21"
			{
				"var_type"							"FIELD_INTEGER"
				"minidroid_mobility_constant"		"0"
			}
			"22"			
			{			
				"var_type"							"FIELD_INTEGER"
				"minidroid_mobility_factor"			"1"
			}
			"07"
			{
				"var_type"							"FIELD_INTEGER"
				"primary_minidroid_energy_beam_constant"			    "0"
			}
			"08"
			{			
				"var_type"							"FIELD_INTEGER"
				"primary_minidroid_energy_beam_factor"				    "2"
			}
			"15"
			{
				"var_type"							"FIELD_INTEGER"
				"nanites_standard_constant"			"0"
			}
			"16"
			{			
				"var_type"							"FIELD_INTEGER"
				"nanites_standard_factor"			"1"
			}
            "09"
			{
				"var_type"							"FIELD_INTEGER"
				"distance"			                "-95"
			}
			"10"
			{			
				"var_type"							"FIELD_INTEGER"
				"mini_count"				        "1"
			}
			"11"
			{			
				"var_type"							"FIELD_INTEGER"
				"owner_armor_bonus"				    "0 1 2 3 3 3"
			}
			"12"
			{			
				"var_type"							"FIELD_INTEGER"
				"all_armor_bonus"				    "0 1 2 3 4 5"
			}
			"13"
			{			
				"var_type"							"FIELD_INTEGER"
				"owner_radius"				        "144"
			}
			"14"
			{			
				"var_type"							"FIELD_INTEGER"
				"all_radius"    				    "625"
			}
			"23"
			{			
				"var_type"							"FIELD_INTEGER"
				"cells_energy"				    	"50 75 100 125 150 175 200 225 250"
			}
			"25"
			{			
				"var_type"							"FIELD_INTEGER"
				"birth_energy_base"				    "80"
			}
			"26"
			{			
				"var_type"							"FIELD_INTEGER"
				"birth_energy"	    				"120 160 200 240 280 320 360 400"
			}
			"27"
			{			
				"var_type"							"FIELD_INTEGER"
				"birth_energy_reserve"    			"250"
			}
		}
		
		"OnSpellStart"
		{
			"SpawnUnit"
			{
				"UnitName"			"ho_minidroid"
				"Target"
				{
					"Center"				"CASTER"
					"ScriptSelectPoints"
					{
						"ScriptFile"    "heroes/hero_heavy_ordnance/ho_construct_droid.lua"
	        			"Function"      "GetFrontPoint"
						"Target"		"CASTER"
						"Distance"		"%distance"
					}
				}
	
				"UnitCount"			"%mini_count"
	
				// This makes sure units never get stuck
				"OnSpawn"
				{
					"ApplyModifier"
					{
						"ModifierName"	"modifier_phased"
						"Target"		"TARGET"
						"Duration"		"0.03"
					}
                    "ApplyModifier"
					{
						"ModifierName"	"modifier_ho_minidroid"
						"Target"		"TARGET"
					}
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_heavy_ordnance/ho_construct_droid.lua"
						"Function"		"SetUnitsMoveForward"
					}
				}
			}
		}

		"Modifiers"
		{
			"modifier_ho_minidroid"
			{
				"IsHidden"              "1"
                "OnCreated"
                {
                    "RunScript"
					{
						"ScriptFile"	"heroes/hero_heavy_ordnance/ho_construct_droid.lua"
						"Function"		"SpinUpDroid"
					}
                }
                "OnDestroy"
                {
                    "RunScript"
					{
						"ScriptFile"	"heroes/hero_heavy_ordnance/ho_construct_droid.lua"
						"Function"		"SpinDownDroid"
					}
                }
			}
            
			"modifier_defense_matrix_owner1"
			{
				"IsHidden"              "1"
				"Aura"				        "modifier_defense_matrix_owner1_armor_bonus"
				"Aura_Radius"				"%owner_radius"
                "Aura_Teams"				"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
				"Aura_Types"				"DOTA_UNIT_TARGET_HERO"
                "Aura_Flags"				"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
			}
            "modifier_defense_matrix_owner1_armor_bonus"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS"		"%owner_armor_bonus"
				}
			}
            
			"modifier_defense_matrix_owner2"
			{
				"IsHidden"              "1"
				"Aura"				        "modifier_defense_matrix_owner2_armor_bonus"
				"Aura_Radius"				"%owner_radius"
                "Aura_Teams"				"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
				"Aura_Types"				"DOTA_UNIT_TARGET_HERO"
                "Aura_Flags"				"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
			}
            "modifier_defense_matrix_owner2_armor_bonus"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS"		"%owner_armor_bonus"
				}
			}
            
			"modifier_defense_matrix_owner3"
			{
				"IsHidden"              "1"
				"Aura"				        "modifier_defense_matrix_owner3_armor_bonus"
				"Aura_Radius"				"%owner_radius"
                "Aura_Teams"				"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
				"Aura_Types"				"DOTA_UNIT_TARGET_HERO"
                "Aura_Flags"				"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
			}
            "modifier_defense_matrix_owner3_armor_bonus"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS"		"%owner_armor_bonus"
				}
			}
            
			"modifier_defense_matrix_owner4"
			{
				"IsHidden"              "1"
				"Aura"				        "modifier_defense_matrix_owner4_armor_bonus"
				"Aura_Radius"				"%owner_radius"
                "Aura_Teams"				"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
				"Aura_Types"				"DOTA_UNIT_TARGET_HERO"
                "Aura_Flags"				"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
			}
            "modifier_defense_matrix_owner4_armor_bonus"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS"		"%owner_armor_bonus"
				}
			}
            
			"modifier_defense_matrix_owner5"
			{
				"IsHidden"              "1"
				"Aura"				        "modifier_defense_matrix_owner5_armor_bonus"
				"Aura_Radius"				"%owner_radius"
                "Aura_Teams"				"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
				"Aura_Types"				"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
                "Aura_Flags"				"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
			}
            "modifier_defense_matrix_owner5_armor_bonus"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS"		"%owner_armor_bonus"
				}
			}
			
			"modifier_defense_matrix_all"
			{
				"IsHidden"              "1"
				"Aura"						"modifier_defense_matrix_all_armor_bonus"
				"Aura_Radius"				"%all_radius"
				"Aura_Teams"				"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
				"Aura_Types"				"DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_HERO" // TODO this really needs to target only minidroids
				"Aura_Flags"				"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
			}
			
			"modifier_defense_matrix_all_armor_bonus"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS"		"%all_armor_bonus"
				}
			}
		}
	}
        
	//=================================================================================================================
	// Ability: Heavy Ordnance XLR8
	//=================================================================================================================
	"ho_xlr8"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"BaseClass"						"ability_datadriven"
		"MaxLevel"						"5"
		"AbilityTextureName"			"pudge_dismember"
		
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0.3"
		"AoeRadius"						"%unphased_radius"

		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"
		
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"							"FIELD_FLOAT"
				"attack_speed_bonus"				"25 50 100 200 400"
			}
			"02"			
			{			
				"var_type"							"FIELD_INTEGER"
				"unphased_radius"					"144"
			}			
			"03"			
			{			
				"var_type"							"FIELD_INTEGER"
				"phased_radius"						"900"
			}
			"04"
			{
				"var_type"							"FIELD_INTEGER"
				"location_check_interval"			"3"
			}
			"05"
			{
				"var_type"							"FIELD_INTEGER"
				"speed_up_initial"					"5"
			}
			"06"
			{
				"var_type"							"FIELD_INTEGER"
				"speed_up_interval"					"7.5"
			}
			"07"
			{
				"var_type"							"FIELD_INTEGER"
				"duration"							"120"
			}
		}
		
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"        	"modifier_xlr8_location_thinker"
				"Target"          		"CASTER"
			}
			"FireSound"
			{
				"Target"			"CASTER"
				"EffectName"		"hero_Crystal.freezingField.wind"
			}
		}

		"Modifiers"
		{
			"modifier_xlr8_location_thinker"
			{
				"ThinkInterval"				"%location_check_interval"
				"Duration"					"%duration"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"        "heroes/hero_heavy_ordnance/ho_xlr8.lua"
						"Function"          "UpdateLocation"  // This will murder everything if it moves too far
					}
				}
				"OnCreated"
				{
					"RunScript"
					{
						"ScriptFile"        "heroes/hero_heavy_ordnance/ho_xlr8.lua"
						"Function"          "SetLocation"
					}
					"RunScript"
					{
						"ScriptFile"        "heroes/hero_heavy_ordnance/ho_xlr8.lua"
						"Function"          "SpeedUpLoop"
						"initial"			"%speed_up_initial"
						"interval"			"%speed_up_interval"
					}
					"RemoveModifier"
					{
						"ModifierName"		"modifier_xlr8_attack_bonus"
						"Target"
						{
							"Center"    "CASTER"
							"Radius"    "%phased_radius"
							"Teams"  "DOTA_UNIT_TARGET_TEAM_FRIENDLY"
							"Types"  "DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
							"Flags"  "DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
						}
					}
					"ApplyModifier"
					{
						"ModifierName"        	"modifier_xlr8_unphased_aura"
						"Target"          		"CASTER"
					}
					"ApplyModifier"
					{
						"ModifierName"        	"modifier_xlr8_phased_aura"
						"Target"          		"CASTER"
					}
				}
				"OnDestroy" // This guy is responsible for cleaning everything up too
				{
					"RunScript"
					{
						"ScriptFile"        "heroes/hero_heavy_ordnance/ho_xlr8.lua"
						"Function"          "ResetAbility"
					}
					"RemoveModifier"
					{
						"ModifierName"		"modifier_xlr8_unphased_aura"
						"Target"			"CASTER"
					}
					"RemoveModifier"
					{
						"ModifierName"		"modifier_xlr8_phased_aura"
						"Target"			"CASTER"
					}
				}
			}
			
			"modifier_xlr8_unphased_aura"
			{
				"IsHidden"					"1"
				"Aura"						"modifier_xlr8_attack_bonus"
				"Aura_Teams"				"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
				"Aura_Types"				"DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_HERO" // TODO this really needs to target only minidroids
				"Aura_Flags"				"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
				"Aura_Radius" 				"%unphased_radius"
			}
			
			"modifier_xlr8_phased_aura"
			{
				"IsHidden"					"1"
				"Aura"						"modifier_xlr8_attack_bonus"
				"Aura_Teams"				"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
				"Aura_Types"				"DOTA_UNIT_TARGET_BASIC" // TODO this really needs to target only minidroids
				"Aura_Flags"				"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED | DOTA_UNIT_TARGET_FLAG_INVULNERABLE"
				"Aura_Radius" 				"%phased_radius"
			}

			"modifier_xlr8_attack_bonus"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT"		"%attack_speed_bonus"
				}
			}
		}
	}
	// This is just for use with flamethrower bouncy stuff
	
	   "luna_moon_glaive_dummy_datadriven"
	   {
	      // General
	      //-------------------------------------------------------------------------------------------------------------
	      "BaseClass"				"ability_datadriven"
	      "AbilityBehavior"		"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	      "SpellImmunityType"	"SPELL_IMMUNITY_ENEMIES_YES"
	
	      "OnProjectileHitUnit"
	      {
	         "DeleteOnHit"	"1"
	
	         "RunScript"
	         {
	            "ScriptFile"	"scripts/vscripts/heroes/hero_luna/moon_glaive.lua"
	            "Function"		"moon_glaive_dummy_created"
	         }
	
	      }
	
	      "Modifiers"
	      {
	         "modifier_moon_glaive_dummy_unit"
	         {
	            "States"
	            {
	               "MODIFIER_STATE_INVULNERABLE"					"MODIFIER_STATE_VALUE_ENABLED"
	               "MODIFIER_STATE_NO_HEALTH_BAR"					"MODIFIER_STATE_VALUE_ENABLED"
	               "MODIFIER_STATE_NO_UNIT_COLLISION"				"MODIFIER_STATE_VALUE_ENABLED"
	               "MODIFIER_STATE_NOT_ON_MINIMAP"					"MODIFIER_STATE_VALUE_ENABLED"
	               "MODIFIER_STATE_UNSELECTABLE"					"MODIFIER_STATE_VALUE_ENABLED"
	               "MODIFIER_STATE_FLYING"							"MODIFIER_STATE_VALUE_ENABLED"
	            }
	
	            "OnCreated"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"	"scripts/vscripts/heroes/hero_luna/moon_glaive.lua"
	                  "Function"		"moon_glaive_dummy_created"
	               }
	            }
	         }
	      }
	   }
	//=================================================================================================================
	// Ability: Andrenaline (Medic)
	//=================================================================================================================
	
	"medic_adrenaline"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_BOTH"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"MaxLevel"						"1" 		//Needs to be chnaged for levels 51-55
		"AbilityTextureName"			"huskar_berserkers_blood"
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"120"
		"AbilityCastPoint"				"0.05"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"60"		//Needs to be changed for levels 51-55
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"duration"			"20"
			}
	
			"02"
			{
				"var_type"			"FIELD_INTEGER"
				"modelscale"		"25"
			}
	
			"03"
			{
				"var_type"					"FIELD_INTEGER"
				"attack_speed_bonus_pct"	"300"
			}
			"04"
			{
				"var_type"			"FIELD_INTEGER"
				"rush_duration"			"10"
			}
			"04"
			{
				"var_type"			"FIELD_INTEGER"
				"rush_wait_duration"			"14"
			}
			"05"
			{
				"var_type"			"FIELD_INTEGER"
				"rush_check_duration"			"5"
			}
			"06"
			{
				"var_type"			"FIELD_INTEGER"
				"rush_gap_duration"			"1"
			}
		}
	
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_dark_seer.vsndevts"
			"particle"			"particles/units/heroes/hero_dark_seer/dark_seer_surge.vpcf"
		}
		
		"OnAbilityPhaseStart"
		{
			"RunScript"
			{
	               "ScriptFile"		"scripts/vscripts/heroes/hero_medic/medic_adrenaline.lua"
	               "Function"		"OnAbilityPhaseStart"
	            }
		}
		
	
		"OnSpellStart"
		{
			"FireEffect"
			{
				"EffectName"        "particles/units/heroes/hero_dark_seer/dark_seer_surge.vpcf"
				"EffectAttachType"  "follow_origin"
				"Target"            "TARGET"
			}
	
			"FireSound"
			{
				"EffectName"	"Hero_Dark_Seer.Surge"
				"Target" 		"TARGET"
			}
	
			"ApplyModifier"
			{
				"ModifierName"	"modifier_adrenaline"
				"Target" 		"TARGET"
				"Duration"		"%duration"
			}
			"RunScript"
			{
	               "ScriptFile"	"scripts/vscripts/heroes/hero_medic/medic_adrenaline.lua"
	               "Function"		"OnSpellStart"
	            }
			"ApplyModifier"
			{
				"ModifierName"	"modifier_rush_waiter"
				"Target" 		"TARGET"
				"Duration"		"%rush_wait_duration"
			}
		}
	
		"Modifiers"
		{
			"modifier_rush_waiter"
			{
				"IsHidden" "1"
				"OnDestroy"
				{
					"ApplyModifier"
					{
						"ModifierName"	"modifier_rush_thinker"
						"Target" 		"TARGET"
						"Duration"		"%rush_duration"
					}
				}
			}
			"modifier_rush_thinker"
			{
				"IsHidden" "1"
				"ThinkInterval" "%rush_check_duration"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/heroes/hero_medic/medic_adrenaline.lua"
						"Function"		"RushThink"
					}
				}
				"OnCreated"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/heroes/hero_medic/medic_adrenaline.lua"
						"Function"		"RushThink"
					}
				}
			}
			"modifier_adrenaline"
			{
				"EffectName"		"particles/units/heroes/hero_clinkz/clinkz_strafe.vpcf"
				"EffectAttachType"	"follow_origin"
	
				"Properties"
				{
					"MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT" "%attack_speed_bonus_pct"
				}
			}
		}
	}
	//=================================================================================================================
	// Medic: Mending Station
	//=================================================================================================================
	"medic_mending_station"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"              	"ability_datadriven"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_POINT | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"AbilityTextureName"			"dazzle_shallow_grave"
		"MaxLevel"						"2"
		"LevelsBetweenUpgrades"  	"0"
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"  "0"
		"AbilityCastRange"  "160"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"20"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"250 500"
	
		// Damage
		//-------------------------------------------------------------------------------------------------------------
		
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
	
	
		// Special
			//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"mender_duration"			"20"
			}
			"02"
			{
				"var_type"			"FIELD_INTEGER"
				"recharge_time"			"90"
			}
		}
		
		"OnSpellStart"
		{
			"RunScript"
			{
				"ScriptFile"	"heroes/hero_medic/medic_mending_station.lua"
				"Function"		"OnSpellStart"
				"Target"		"POINT"
			}
		}
	}
	//=================================================================================================================
	// Medic: Revive
	   //=================================================================================================================
	  "medic_revive"
	   {
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      	"ability_datadriven"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"
		"MaxLevel"                 		"6"
		"AbilityTextureName"			"omniknight_repel"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"	"soundevents/game_sounds_heroes/game_sounds_omniknight.vsndevts"
			"particle"	"particles/units/heroes/hero_omniknight/omniknight_guardian_angel_halo_buff.vpcf"
			"particle"  "particles/status_fx/status_effect_guardian_angel.vpcf"
			"particle"  "particles/units/heroes/hero_omniknight/omniknight_guardian_angel_ally.vpcf"
			"particle"	"particles/units/heroes/hero_omniknight/omniknight_purification.vpcf"
			"particle"	"particles/units/heroes/hero_omniknight/omniknight_purification_hit.vpcf"
			"particle"	"particles/units/heroes/hero_omniknight/omniknight_purification_cast.vpcf"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				".05"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"20"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"250"
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_FLOAT"
				"recharge_chance"		"5 10 16.7 25 33.3 50 75 100"
			}
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"radius"				"200"
			}
	
	            // The levels of the numbers below aren't linked to revive level, but rather, to armor
	            // light, medium, heavy, advanced, goliath
	            "03"
			{
				"var_type"				"FIELD_INTEGER"
				"ms_bonus_percent"		"-8 -10 -13 -16 -16"
			}
	            "04"
			{
				"var_type"				"FIELD_INTEGER"
				"as_bonus_percent"			"-45 -65 -85 -90 -90"
			}
	            "05"
			{
				"var_type"				"FIELD_INTEGER"
				"exp_bonus_percent"	    "-.75"
			}
	            "06"
			{
				"var_type"				"FIELD_INTEGER"
				"revive_energy"			"980 672 448 448 308"
			}
	            "07"
			{
				"var_type"				"FIELD_INTEGER"
				"sickness_duration"		"20 60 120 150 150"
			}
		}
	
		"OnAbilityPhaseStart"
		{
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/heroes/hero_medic/medic_revive.lua"
				"Function"		"OnAbilityPhaseStart"
			}
		}
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Omniknight.GuardianAngel.Cast"
				"Target"		"CASTER"
			}
			"FireEffect"
			{
				"Target"			"TARGET"
				"EffectName"		"particles/units/heroes/hero_omniknight/omniknight_purification.vpcf"
				"EffectAttachType"	"follow_origin"
				"ControlPoints"
				{
					"00"	"0 0 0"
					"01"	"%radius %radius %radius"
				}
			}
	
			"FireEffect"
			{
				"Target"			"TARGET"
				"EffectName"		"particles/units/heroes/hero_omniknight/omniknight_purification_cast.vpcf"
				"EffectAttachType"	"follow_origin"
			}
	
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/heroes/hero_medic/medic_revive.lua"
				"Function"		"OnSpellStart"
			}
		}
	        "Modifiers"
	        {
	            "modifier_medic_revive_rez_sickness"
	            {
	                "IsDebuff" "1"
	                "Duration" "%sickness_duration"
	                "Properties"
	                {
	                    "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE"  "%ms_bonus_percent"
	                    "MODIFIER_PROPERTY_ATTACKSPEED_BONUS_PERCENTAGE"    "%as_bonus_percent"
	                }
	
				"OnCreated"
				{
					"AttachEffect"
					{
						"EffectName"	"particles/units/heroes/hero_omniknight/omniknight_guardian_angel_halo_buff.vpcf"
						"EffectAttachType"	"follow_overhead"
						"Target"			"TARGET"
					}
				}
			}
		}
	}
	//=================================================================================================================
	// Ability: Contraption Plating (Mender)
	//=================================================================================================================
	"mender_contraption_plating"
	    {
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
		"AbilityName"           	    "Contraption Plating"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	
		"MaxLevel"                 	 	"8"
		"AbilityTextureName"			"tidehunter_kraken_shell"
	
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_dark_seer.vsndevts"
		}
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"bonus_armor"				"4 8 16 24 32 40 48 56 64"
			}
			"02"
			{
				"var_type"			"FIELD_INTEGER"
				"damage_absorption"				"10 20 30 45 60 75 100 125"
			}
		}
		
		"Modifiers"
		{
			"modifier_mender_contraption_plating"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"Properties"
				{
					"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS" "%bonus_armor"
					"MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK" "%damage_absorption"
				}
			}
		}
	}
	//=================================================================================================================
	// Ability: Defense Network (Mender)
	//=================================================================================================================
	"mender_defense_network"
	    {
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
		"AbilityName"           	    "Defense Network"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	
		"MaxLevel"                 	 	"16"
		"AbilityTextureName"			"vengefulspirit_command_aura"
	
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_dark_seer.vsndevts"
		}
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"damage_bonus_percentage"				"-9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21 -22 -23 -24 -25"
			}
			"02"
			{
				"var_type"			"FIELD_INTEGER"
				"aura_radius"				"800"
			}
			"03"
			{
				"var_type"			"FIELD_INTEGER"
				"linger_duration"	"3"
			}
			"04"
			{
				"var_type"			"FIELD_INTEGER"
				"info_bonus_percentage"				"9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"
			}
			"05"
			{
				"var_type"			"FIELD_INTEGER"
				"info_aura_radius"				"625"
			}
		}
		
		"Modifiers"
		{
			"modifier_mender_defense_network"
			{
				"Passive"			"1"
				"IsHidden"			"1"
				"EffectName"		"particles/addons_gameplay/fountain_tintable_top.vpcf"
				"EffectAttachType"	"follow_origin"
				"Aura" "modifier_mender_defense_network_buff"
				"Aura_Radius" "%aura_radius"
				"Aura_Teams" "DOTA_UNIT_TARGET_TEAM_ENEMY"
				"Aura_Types" "DOTA_UNIT_TARGET_ALL"
				"Aura_Flags" "DOTA_UNIT_TARGET_FLAG_MELEE_ONLY"
			}
			"modifier_mender_defense_network_buff"
			{
				"Duration" "%linger_duration"
				"IsDebuff" "1"
				"EffectName"		"particles/units/heroes/hero_dark_seer/dark_seer_surge.vpcf"
				"EffectAttachType"	"follow_origin"
				"Properties"
				{
					"MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE" "%damage_bonus_percentage"
				}
			}
			"modifier_mender_defense_network_info"
			{
				"Passive"			"1"
				"IsHidden"			"1"
				"Aura" "modifier_mender_defense_network_buff_info"
				"Aura_Radius" "%info_aura_radius"
				"Aura_Teams" "DOTA_UNIT_TARGET_TEAM_FRIENDLY"
				"Aura_Types" "DOTA_UNIT_TARGET_ALL"
				"Aura_Flags" "DOTA_UNIT_TARGET_FLAG_NONE"
			}
			"modifier_mender_defense_network_buff_info"
			{
				"Duration" "%linger_duration"
				"EffectName"		"particles/units/heroes/hero_dark_seer/dark_seer_surge.vpcf"
				"EffectAttachType"	"follow_origin"
			}
		}
	}
	//=================================================================================================================
	// Ability: Mend Wounds (Mender)
	//=================================================================================================================
	"mender_mend_wounds"
	    {
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
		"AbilityName"           	    "Mend Wounds"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_AUTOCAST"
	
		"MaxLevel"                 	 	"17"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_CREEP"
		"AbilityTextureName"			"rubick_spell_steal"
	
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_dark_seer.vsndevts"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"625"
		"AbilityCastPoint"				"0.05"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"1"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"heal"				"12 17 23 28 34 39 45 50 56 61 67 72 78 83 89 94 100"
			}
			"02"
			{
				"var_type"			"FIELD_INTEGER"
				"auto_cast_range"	"625"
			}
		}
		"OnAbilityPhaseStart"
		{
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/heroes/hero_medic/medic_mend_wounds.lua"
				"Function"		"OnAbilityPhaseStart"
				"Target"		"TARGET"
			}
		}
		
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Dark_Seer.Ion_Shield_Star"
				"Target"		"TARGET"
			}
			"Heal"
			{
				"Target" 		"TARGET"
				"HealAmount"	"%heal"
			}
	
		}
		
		"Modifiers"
		{
			"modifier_mender_mend_wounds_autocast"
			{
				"Passive"			"1"
				"IsHidden"			"1"
				"OnCreated"
				{
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_medic/medic_mend_wounds.lua"
						"Function"		"HealAutocast"
					}
				}
	
				"ThinkInterval" ".15"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_medic/medic_mend_wounds.lua"
						"Function"		"HealAutocast"
					}
				}
			}
		}
	}
	//=================================================================================================================
	// Ability: Droid Ammo (Minidroid)
	//=================================================================================================================
	"minidroid_ammo"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"BaseClass"						"ability_datadriven"
		"MaxLevel"                 		"4"
		"AbilityTextureName"			"sniper_shrapnel"
		
		
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"damage_min"				"1 2 3 4"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"damage_max"				"5 10 15 20"
			}
			"03"
			{
				"var_type"					"FIELD_INTEGER"
				"range"						"75 150 225 300"
			}
		}
		"Modifiers"
		{
			"modifier_minidroid_ammo"
			{
				"Passive"				"1"
				"IsHidden"				"1"
				"OnCreated"
				{
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_heavy_ordnance/minidroid_ammo.lua"
						"Function"		"AddBonusDamageDice"
					}
                    "RunScript"
					{
						"ScriptFile"	"heroes/hero_heavy_ordnance/minidroid_ammo.lua"
						"Function"		"AddAcquisitionRange"
					}
				}
				"Properties"
				{
					"MODIFIER_PROPERTY_ATTACK_RANGE_BONUS" "%range"
				}
				
				"OnDestroy"
				{
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_heavy_ordnance/minidroid_ammo.lua"
						"Function"		"RemoveBonusDamageDice"
					}
                    "RunScript"
					{
						"ScriptFile"	"heroes/hero_heavy_ordnance/minidroid_ammo.lua"
						"Function"		"RemoveAcquisitionRange"
					}
				}
			}
		}
		
	}
	//=================================================================================================================
	// Ability: Droid Integrity (Minidroid)
	//=================================================================================================================
	"minidroid_integrity"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		
		"BaseClass"						"ability_datadriven"
		"MaxLevel"                 		"3"
		"AbilityTextureName"			"shredder_reactive_armor"
		
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"health_regen"		        "1 2 3"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"damage_reduction"			"-4 -8 -12"
			}
		}
		"Modifiers"
		{
			"modifier_minidroid_integrity"
			{	
				"Passive"				"1"
				"IsHidden"				"1"
				"Properties"
				{
					"MODIFIER_PROPERTY_HEALTH_REGEN_CONSTANT" 				"%health_regen"
					"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE" 			"%damage_reduction"
				}
			}
		}
		
	}
	//=================================================================================================================
	// Ability: Droid Mobility (Minidroid)
	//=================================================================================================================
	"minidroid_mobility"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		
		"BaseClass"						"ability_datadriven"
		"MaxLevel"                 		"1"
		"AbilityTextureName"			"bounty_hunter_track"
		
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"move_speed"			"30"
			}
		}
		"Modifiers"
		{
			"modifier_minidroid_mobility"
			{	
				"Passive"				"1"
				"IsHidden"				"1"
				"Properties"
				{
					"MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT" 				"%move_speed"
				}
			}
		}
	}
	//=================================================================================================================
	   // Ability: Mana Shield Light (Nanites-Light Armor)
	   // NOTE: This is a POST DAMAGE REDUCTION Mana Shield
	   //=================================================================================================================
	   "nanites_compact"
	   {
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				"ability_datadriven"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_TOGGLE | DOTA_ABILITY_BEHAVIOR_IMMEDIATE"
		"AbilityTextureName"			"medusa_mana_shield"
		"MaxLevel"                 "20"
		"LevelsBetweenUpgrades"    "0"
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0.4"
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				   "FIELD_FLOAT"
				//"damage_per_mana"		"0.25 0.285 0.333 0.370 0.417 0.476 0.541 0.606 0.690 0.80 0.909 1.053 1.25 1.429 1.667 2.0 2.5 2.857"
	            // Putting 21 values here crashes it - don't know why - BDO
				"efficiency"            "4.0 3.5 3.0 2.7 2.4 2.1 1.85 1.65 1.45 1.25 1.10 0.95 0.80 0.70 0.60 0.50 0.45 0.40 0.35 0.32"
			}
			"02"
			{
				"var_type"				"FIELD_FLOAT"
				"absorption_tooltip"		"90 90 90 90 90 90 91 91 91 91 91 91 91 91 91 91 91 92 92 92"
			}
	         "03"
	         {
	            "var_type"           "FIELD_FLOAT"
	            "damage_reduction_percent" "-90 -90 -90 -90 -90 -90 -91 -91 -91 -91 -91 -91 -91 -91 -91 -91 -91 -92 -92 -92"
	         }
		}
		"OnToggleOn"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Medusa.ManaShield.On"
				"Target" 		"CASTER"
			}
	
			"FireEffect"
			{
				"EffectName"        "particles/units/heroes/hero_medusa/medusa_mana_shield_cast.vpcf"
				"EffectAttachType"  "follow_origin"
				"Target"            "CASTER"
			}
	
			"ApplyModifier"
			{
				"ModifierName"	"modifier_mana_shield_datadriven"
				"Target" 		"CASTER"
			}
		}
		"OnToggleOff"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Medusa.ManaShield.Off"
				"Target" 		"CASTER"
			}
	
			"FireEffect"
			{
				"EffectName"        "particles/units/heroes/hero_medusa/medusa_mana_shield_end.vpcf"
				"EffectAttachType"  "follow_origin"
				"Target"            "CASTER"
			}
	
			"RemoveModifier"
			{
				"ModifierName"	"modifier_mana_shield_datadriven"
				"Target"
				{
					"Center"	"CASTER"
					"Flags" 	"DOTA_UNIT_TARGET_FLAG_DEAD"
				}
			}
		}
		"Modifiers"
		{
			"modifier_mana_shield_datadriven"
			{
				"Passive"			"0"
				"IsHidden"			"0"
				"IsBuff"			   "1"
	
				"Properties"
				{
					// This property will reduce incoming damage by the % listed, making us not need to modify hero health later
					// and preventing heroes from dying when they shouldn't, requires calculating back out later in lua
					"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE"	"%damage_reduction_percent"
				}
	
				"EffectName"		"particles/units/heroes/hero_medusa/medusa_mana_shield.vpcf"
				"EffectAttachType"	"follow_origin"
	
				"OnTakeDamage"
				// "%attack_damage" is set to the damage value after mitigation
				{
					"FireSound"
					{
						"EffectName"	"Hero_Medusa.ManaShield.Proc"
						"Target" 		"UNIT"
					}
	
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_medusa/mana_shield.lua"
						"Function"		"ManaShield"
						"Damage"		   "%attack_damage"
					}
				}
			}
		}
	   }
	//=================================================================================================================
	   // Ability: Mana Shield Heavy (Nanites-Heavy Armor)
	   // NOTE: This is a POST DAMAGE REDUCTION Mana Shield
	   //=================================================================================================================
	   "nanites_heavy"
	   {
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				"ability_datadriven"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_TOGGLE | DOTA_ABILITY_BEHAVIOR_IMMEDIATE"
		"AbilityTextureName"			"medusa_mana_shield"
		"MaxLevel"                 "18"
		"LevelsBetweenUpgrades"    "0"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_medusa.vsndevts"
			"particle"			"particles/units/heroes/hero_medusa/medusa_mana_shield.vpcf"
			"particle"			"particles/units/heroes/hero_medusa/medusa_mana_shield_cast.vpcf"
			"particle"			"particles/units/heroes/hero_medusa/medusa_mana_shield_end.vpcf"
			"particle"			"particles/units/heroes/hero_medusa/medusa_mana_shield_impact.vpcf"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0.4"
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_FLOAT"
				"efficiency" 			"2.33 2.00 1.75 1.50 1.25 1.00 0.8 0.6 0.5 0.4 0.35 0.30 0.27 0.24 0.22 0.20 0.18 0.17 0.16 0.15"
			}
			"02"
			{
				"var_type"				"FIELD_FLOAT"
				"absorption_tooltip"		"90 91 91 91 91 91 91 91 91 92 92 92 92 93 93 93 93 93 94 94"
			}
			"03"
			{
				"var_type"           "FIELD_FLOAT"
				"damage_reduction_percent" "-90 -91 -91 -91 -91 -91 -91 -91 -91 -92 -92 -92 -92 -93 -93 -93 -93 -93 -94 -94"
			}
		}
		"OnToggleOn"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Medusa.ManaShield.On"
				"Target" 		"CASTER"
			}
	
			"FireEffect"
			{
				"EffectName"        "particles/units/heroes/hero_medusa/medusa_mana_shield_cast.vpcf"
				"EffectAttachType"  "follow_origin"
				"Target"            "CASTER"
			}
	
			"ApplyModifier"
			{
				"ModifierName"	"modifier_mana_shield_datadriven"
				"Target" 		"CASTER"
			}
		}
		"OnToggleOff"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Medusa.ManaShield.Off"
				"Target" 		"CASTER"
			}
	
			"FireEffect"
			{
				"EffectName"        "particles/units/heroes/hero_medusa/medusa_mana_shield_end.vpcf"
				"EffectAttachType"  "follow_origin"
				"Target"            "CASTER"
			}
	
			"RemoveModifier"
			{
				"ModifierName"	"modifier_mana_shield_datadriven"
				"Target"
				{
					"Center"	"CASTER"
					"Flags" 	"DOTA_UNIT_TARGET_FLAG_DEAD"
				}
			}
		}
		"Modifiers"
		{
			"modifier_mana_shield_datadriven"
			{
				"Passive"			"0"
				"IsHidden"			"0"
				"IsBuff"			   "1"
	
				"Properties"
				{
					// This property will reduce incoming damage by the % listed, making us not need to modify hero health later
					// and preventing heroes from dying when they shouldn't, requires calculating back out later in lua
					"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE"	"%damage_reduction_percent"
				}
	
				"EffectName"		"particles/units/heroes/hero_medusa/medusa_mana_shield.vpcf"
				"EffectAttachType"	"follow_origin"
	
				"OnTakeDamage"
				// "%attack_damage" is set to the damage value after mitigation
				{
					"FireSound"
					{
						"EffectName"	"Hero_Medusa.ManaShield.Proc"
						"Target" 		"UNIT"
					}
	
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_medusa/mana_shield.lua"
						"Function"		"ManaShield"
						"Damage"		   "%attack_damage"
					}
				}
			}
		}
	}
	//=================================================================================================================
	   // Ability: Mana Shield Standard (Nanites-Standard Armor)
	   // NOTE: This is a POST DAMAGE REDUCTION Mana Shield
	   //=================================================================================================================
	   "nanites_standard"
	   {
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				"ability_datadriven"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_TOGGLE | DOTA_ABILITY_BEHAVIOR_IMMEDIATE"
		"AbilityTextureName"			"medusa_mana_shield"
		"MaxLevel"                 "18"
		"LevelsBetweenUpgrades"    "0"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_medusa.vsndevts"
			"particle"			"particles/units/heroes/hero_medusa/medusa_mana_shield.vpcf"
			"particle"			"particles/units/heroes/hero_medusa/medusa_mana_shield_cast.vpcf"
			"particle"			"particles/units/heroes/hero_medusa/medusa_mana_shield_end.vpcf"
			"particle"			"particles/units/heroes/hero_medusa/medusa_mana_shield_impact.vpcf"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0.4"
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_FLOAT"
				"efficiency" 			"4.0 3.5 3.0 2.66 2.33 2.00 1.75 1.50 1.25 1.00 0.8 0.6 0.5 0.4 0.35 0.30 0.28 0.26 0.24 0.22"
			}
			"02"
			{
				"var_type"				"FIELD_FLOAT"
				"absorption_tooltip"		"90 90 90 90 90 91 91 91 91 91 91 91 91 92 92 92 92 92 93 93"
			}
			"03"
			{
				"var_type"           "FIELD_FLOAT"
				"damage_reduction_percent" "-90 -90 -90 -90 -90 -91 -91 -91 -91 -91 -91 -91 -91 -92 -92 -92 -92 -92 -93 -93"
			}
		}
		"OnToggleOn"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Medusa.ManaShield.On"
				"Target" 		"CASTER"
			}
	
			"FireEffect"
			{
				"EffectName"        "particles/units/heroes/hero_medusa/medusa_mana_shield_cast.vpcf"
				"EffectAttachType"  "follow_origin"
				"Target"            "CASTER"
			}
	
			"ApplyModifier"
			{
				"ModifierName"	"modifier_mana_shield_datadriven"
				"Target" 		"CASTER"
			}
		}
		"OnToggleOff"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Medusa.ManaShield.Off"
				"Target" 		"CASTER"
			}
	
			"FireEffect"
			{
				"EffectName"        "particles/units/heroes/hero_medusa/medusa_mana_shield_end.vpcf"
				"EffectAttachType"  "follow_origin"
				"Target"            "CASTER"
			}
	
			"RemoveModifier"
			{
				"ModifierName"	"modifier_mana_shield_datadriven"
				"Target"
				{
					"Center"	"CASTER"
					"Flags" 	"DOTA_UNIT_TARGET_FLAG_DEAD"
				}
			}
		}
		"Modifiers"
		{
			"modifier_mana_shield_datadriven"
			{
				"Passive"			"0"
				"IsHidden"			"0"
				"IsBuff"			   "1"
	
				"Properties"
				{
					// This property will reduce incoming damage by the % listed, making us not need to modify hero health later
					// and preventing heroes from dying when they shouldn't, requires calculating back out later in lua
					"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE"	"%damage_reduction_percent"
				}
	
				"EffectName"		"particles/units/heroes/hero_medusa/medusa_mana_shield.vpcf"
				"EffectAttachType"	"follow_origin"
	
				"OnTakeDamage"
				// "%attack_damage" is set to the damage value after mitigation
				{
					"FireSound"
					{
						"EffectName"	"Hero_Medusa.ManaShield.Proc"
						"Target" 		"UNIT"
					}
	
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_medusa/mana_shield.lua"
						"Function"		"ManaShield"
						"Damage"		   "%attack_damage"
					}
				}
			}
		}
	}
	//=================================================================================================================
	// Ability: Aim (Covert Sniper)
	//=================================================================================================================
	   "primary_covert_sniper_aim"
	   {
	      // General
	      //-------------------------------------------------------------------------------------------------------------
	      "BaseClass"				      "ability_datadriven"
	      "AbilityName"              "Aim"
	      "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE"
	      "MaxLevel"                 "16"
	      "LevelsBetweenUpgrades"    "0"
	      "AbilityTextureName"			"sniper_assassinate"
	
	      // Casting
	      "AbilityCastPoint"			"0.0"
	      "AbilityCooldown"				"89.0 81.0 73.0 65.0 57.0 49.0 41.0 33.0 32.0 31.0 30.0 29.0 28.0 27.0 26.0 25.0"
	      "AbilityManaCost"				"0"
	      // Special
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"				   "FIELD_FLOAT"
	            "duration"				   "20.0"
	         }
	         "02"
	         {
	            "var_type"              "FIELD_INTEGER"
	            "attack_slow"           "-45 -45 -45 -45 -45 -45 -45 -45 -41 -37 -33 -29 -25 -21 -17 -13"
	         }
	         "03"
	         {
	            "var_type"              "FIELD_INTEGER"
	            "movespeed_slow"         "-14"
	         }
	      }
	      "OnSpellStart"
	      {
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_aim"
	            "Target"       "CASTER"
	            "Duration"     "%duration"
	         }
	      }
	
	      "Modifiers"
	      {
	         "modifier_aim"
	         {
	            "IsDebuff"	"1"
	            "IsHidden"  "0"
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE"	   "%movespeed_slow"
	               "MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT"     "%attack_slow"
	            }
	         }
	      }
	   }
	//=================================================================================================================
	// Ability: Concussion Grenade (Covert Sniper)
	//=================================================================================================================
	   "primary_covert_sniper_concussion_grenade"
	   {
	      // General
	      //-------------------------------------------------------------------------------------------------------------
	      "BaseClass"				      "ability_datadriven"
	      "AbilityName"              "Concussion Grenade"
	      "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_POINT | DOTA_ABILITY_BEHAVIOR_AOE"
	      "AbilityUnitTargetTeam"		"DOTA_UNIT_TARGET_TEAM_ENEMY"
	      "AbilityUnitTargetType"		"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_CREEP"
	      "SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_NO"
	      "MaxLevel"                 "16"
	      "LevelsBetweenUpgrades"    "0"
	      "AbilityTextureName"			"brewmaster_drunken_haze"
	
	      // Ability Levels
	      "AoERadius"						"264"
	      "AbilityCastRange"         "650"
	      "AbilityCastPoint"			"0.4"
	      "AbilityCooldown"				"3"
	      "AbilityManaCost"				"80"
	
	      // Special
	      // Each level swaps between upgrading duration (and stun) or the slow effects.
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"              "FIELD_INTEGER"
	            "attack_slow"           "-30 -30 -32 -32 -34 -34 -36 -36 -38 -38 -40 -40 -42 -42 -45 -45"
	         }
	         "02"
	         {
	            "var_type"              "FIELD_INTEGER"
	            "miss_chance"				"20 20 22 22 24 24 26 26 28 28 30 30 32 32 35 35"
	         }
	         "03"
	         {
	            "var_type"              "FIELD_INTEGER"
	            "movement_slow"         "-50 -50 -55 -55 -60 -60 -65 -65 -70 -70 -75 -75 -80 -80 -85 -85"
	         }
	         "04"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "radius"					   "264"
	         }
	         "05"
	         {
	            "var_type"					"FIELD_FLOAT"
	            "duration"					"4.0 5.0 5.0 6.0 6.0 7.0 7.0 8.0 8.0 9.0 9.0 10.0 10.0 11.0 11.0 12.0"
	         }
	         "06"
	         {
	            "var_type"              "FIELD_FLOAT"
	            "stun_duration"         "0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.0 1.0 2.0 2.0 3.0"
	         }
	      }
	
	      "precache"
	      {
	         "particle"  "particles/units/heroes/hero_brewmaster/brewmaster_drunken_haze_debuff.vpcf"
	         "particle" 	"particles/status_fx/status_effect_brewmaster_drunken_haze.vpcf"
	         "particle"	"particles/units/heroes/hero_brewmaster/brewmaster_drunken_haze.vpcf"
	         "soundfile" "soundevents/game_sounds_heroes/game_sounds_brewmaster.vsndevts"
	      }
	
	      "OnSpellStart"
	      {
	         "FireSound"
	         {
	            "EffectName"	"Hero_Brewmaster.DrunkenHaze.Cast"
	            "Target"		   "CASTER"
	         }
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_concussion_grenade_stun"
	            "Target"
	            {
	               "Center"    "POINT"
	               "Radius"    "%radius"
	               "Teams"		"DOTA_UNIT_TARGET_TEAM_ENEMY"
	               "Types"		"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
	            }
	            "Duration"     "%stun_duration"
	         }
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_concussion_grenade"
	            "Target"
	            {
	               "Center"	   "POINT"
	               "Radius"	   "%radius"
	               "Teams"		"DOTA_UNIT_TARGET_TEAM_ENEMY"
	               "Types"		"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
	            }
	            "Duration"		"%duration"
	         }
	      }
	
	      "Modifiers"
	      {
	         "modifier_concussion_grenade_stun"
	         {
	            "IsDebuff"  "1"
	
	            "States"
	            {
	               "MODIFIER_STATE_STUNNED"      "MODIFIER_STATE_VALUE_ENABLED"
	            }
	         }
	         "modifier_concussion_grenade"
	         {
	            "IsDebuff"	"1"
	            "EffectName"			   "particles/units/heroes/hero_brewmaster/brewmaster_drunken_haze_debuff.vpcf"
	            "EffectAttachType"		"follow_origin"
	            "StatusEffectName"		"particles/status_fx/status_effect_brewmaster_drunken_haze.vpcf"
	            "StatusEffectPriority"	"5"
	
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_MISS_PERCENTAGE"				   "%miss_chance"
	               "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE"	"%movement_slow"
	               "MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT"  "%attack_slow"
	            }
	         }
	      }
	   }
	//=================================================================================================================
	// Ability: Critical Shot (Covert Sniper)
	//=================================================================================================================
	   "primary_covert_sniper_critical_shot"
	   {
	      // General
	      //-------------------------------------------------------------------------------------------------------------
	      "BaseClass"				      "ability_datadriven"
	      "AbilityName"              "Critical Shot"
	      "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	      "SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
	      "MaxLevel"                 "8"
	      "LevelsBetweenUpgrades"    "0"
	      "AbilityTextureName"       "chaos_knight_chaos_strike"
	
	      // Special
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "crit_chance"				"0 10 15 20 25 30 35 40 45 50 55 60"
	         }
	         "02"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "crit_damage"				"100 200 220 240 260 280 300 320 340 360 380 400"
	         }
	         "03"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "aim_crit_damage"			"100 260 320 480 440 500 560 620 680 740 800 860"
	         }
	      }
	      "Modifiers"
	      {
	         "modifier_crit_chance"
	         {
	            "Passive"   "1"
	            "IsHidden"	"1"
	            "OnAttackStart"
	            {
	               "RemoveModifier"
	               {
	                  "ModifierName"	"modifier_crit"
	                  "Target"		"CASTER"
	               }
	               "Random"
	               {
	                  "Chance"		"%crit_chance"
	
	                  "OnSuccess"
	                  {
	                     "ApplyModifier"
	                     {
	                        "ModifierName"	"modifier_crit"
	                        "Target"		"CASTER"
	                     }
	                  }
	               }
	               "RunScript"
	               {
	                  "ScriptFile"   "scripts/vscripts/heroes/hero_covert_sniper/critical_shot.lua"
	                  "Function"     "aimCheck"
	               }
	            }
	         }
	         "modifier_crit"
	         {
	            "IsHidden"		"1"
	            "IsPurgable"	"0"
	            "OnAttackLanded"
	            // "%attack_damage" is set to the damage value before mitigation
	            {
	               "RemoveModifier"
	               {
	                  "ModifierName"	"modifier_crit"
	                  "Target" 		"CASTER"
	               }
	            }
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE" "%crit_damage"
	            }
	         }
	         "modifier_aim_crit"
	         {
	            "IsHidden"		"1"
	            "IsPurgable"	"0"
	            "OnAttackLanded"
	            // "%attack_damage" is set to the damage value before mitigation
	            {
	               "RemoveModifier"
	               {
	                  "ModifierName"	"modifier_aim_crit"
	                  "Target" 		"CASTER"
	               }
	            }
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE" "%aim_crit_damage"
	            }
	         }
	      }
	   }
	//=================================================================================================================
	// Ability: Marksman (Covert Sniper)
	//=================================================================================================================
	"primary_covert_sniper_marksman"
	{
	// General
	//-------------------------------------------------------------------------------------------------------------
	"BaseClass"				      "ability_datadriven"
	   "AbilityName"              "Marksman"
	"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
	"AbilityUnitTargetTeam"		"DOTA_UNIT_TARGET_TEAM_BOTH"
	"AbilityUnitTargetType"		"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_CREEP"
	   "MaxLevel"                 "16"
	   "LevelsBetweenUpgrades"    "0"
	"AbilityTextureName"			"sniper_take_aim"
	
	// Special
	//-------------------------------------------------------------------------------------------------------------
	"AbilitySpecial"
	{
		"01"
		{
			"var_type"						"FIELD_INTEGER"
			"bonus_range"			      "40 80 120 160 200 240 280 320 360 400 440 480 520 560 600 640"
		}
	      "02"
	      {
	         // Pierce only occurs on kills.
	         "var_type"                 "FIELD_INTEGER"
	         "pierce_chance"            "15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90"
	      }
	      "03"
	      {  // Crit (& crit_damage) are only when Aiming.
	         "var_type"                 "FIELD_INTEGER"
	         "crit_chance"              "20"
	      }
	      "04"
	      {
	         "var_type"                 "FIELD_INTEGER"
	         "crit_damage"              "120"
	      }
	   }
	   "OnProjectileHitUnit"
	   {
	     "RunScript"
	      {
	         "ScriptFile"	"scripts/vscripts/heroes/hero_covert_sniper/marksman.lua"
	         "Function"		"GetTargetLocation"
	      }
	      "RunScript"
	      {
	         "ScriptFile"			"scripts/vscripts/heroes/hero_covert_sniper/marksman.lua"
	         "Function"				"PierceHit"
	         "Target"				   "TARGET"
	      }
	   }
	// Data driven
	//-------------------------------------------------------------------------------------------------------------
	"Modifiers"
	{
		"modifier_marksman_range"
		{
			"Passive"			"1"
			"IsPurgable"		"0"
			"IsHidden"			"1"
	
			"Properties"
			{
				"MODIFIER_PROPERTY_ATTACK_RANGE_BONUS"	"%bonus_range"
	            "MODIFIER_PROPERTY_BONUS_DAY_VISION"   "%bonus_range"
	            "MODIFIER_PROPERTY_BONUS_DAY_VISION"   "%bonus_range"
			}
		}
	      "modifier_marksman_pierce"
	      {
	         "Passive"         "1"
	         "IsHidden"        "1"
	         "OnAttackLanded"
	         {
	           "RunScript"
	            {
	               "ScriptFile"	"scripts/vscripts/heroes/hero_covert_sniper/marksman.lua"
	               "Function"		"getTargetLocation"
	            }
	         }
	         "OnDealDamage"
	         {
	           "RunScript"
	            {
	               "ScriptFile"	"scripts/vscripts/heroes/hero_covert_sniper/marksman.lua"
	               "Function"		"getDamageDealt"
	               "kill_damage"  "%attack_damage"
	            }
	         }
	         "OnKill"
	         {
	            // Chance to pierce
	            "Random"
	            {
	               "Chance"		"%pierce_chance"
	               "OnSuccess"
	               {
	                  "RunScript"
	                  {
	                     "ScriptFile"	"scripts/vscripts/heroes/hero_covert_sniper/marksman.lua"
	                     "Function"		"Pierce"
	                  }
	               }
	            }
	         }
	      }
	}
	}
	//=================================================================================================================
	// Cybrog: Cluster Rockets
	//=================================================================================================================
	"primary_cyborg_cluster_rockets"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"              	"ability_datadriven"
		"ScriptFile"        		"heroes/hero_cyborg/primary_cyborg_cluster_rockets.lua"
		"AbilityTextureName"		"gyrocopter_flak_cannon"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_POINT | DOTA_ABILITY_BEHAVIOR_AOE"
		"AbilityUnitTargetTeam"		"DOTA_UNIT_TARGET_TEAM_BOTH"
		"AbilityUnitTargetType"		"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"MaxLevel"					"16"
		"LevelsBetweenUpgrades"  	"0"
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"  "0"
		"AbilityCastRange"  "1000"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"6"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200"
	
		// Damage
		//-------------------------------------------------------------------------------------------------------------
		// "AbilityDamage"				"250" calculated by script mainly
		"AbilityUnitDamageType"			"DAMAGE_TYPE_MAGICAL"
		"AoERadius"						"275 290 305 320 335 350 365 380 395 410 425 440 455 470 485 500"
	
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
	
	
		// Special
			//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"                	"FIELD_INTEGER"
				"total_damage_cap"          "1000 1200 1400 1600 1800 2000 2200 2400 2600 2800 3000 3200 3400 3600 3800 4000"
			}
			"02"
			{
				"var_type"                	"FIELD_INTEGER"
				"unit_damage_cap"          	"250 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000"
			}
			"03"
			{
				"var_type"                	"FIELD_FLOAT"
				"tick_rate"           		".08 .08 .08 .08 .08 .12 .12 .12 .12 .12 .12 .12 .12 .12 .12 .12 .12"
			}
			"03" // I know this is derived information but it helps to have each natively available
			{
				"var_type"                	"FIELD_FLOAT"
				"ticks"           			"5"
			}
			"04"
			{
				"var_type"                	"FIELD_FLOAT"
				"damage_duration"           ".33 .33 .33 .33 .33 .49 .49 .49 .49 .49 .49 .49 .49 .49 .49 .49 .49"
			}
			"05"
			{
				"var_type"                	"FIELD_INTEGER"
				"rockets"              		"5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20"
			}
			"06"
			{
				"var_type"                	"FIELD_FLOAT"
				"delay"                		"0.75"
			}
			"07"
			{
				"var_type"                	"FIELD_FLOAT"
				"stun_duration"          	".33 .33 .33 .33 .33 .66 .66 .66 .66 .66 1.0 1.0 1.0 1.0 1.0 1.33"
			}
			"07"
			{
				"var_type"                	"FIELD_FLOAT"
				"radius"          			"275 290 305 320 335 350 365 380 395 410 425 440 455 470 485 500"
			}
		}
		
		"OnSpellStart"
		{
			"DelayedAction"
			{
				"Delay"						"%delay"
				"Action"
				{
					"CreateThinker"
					{
						"ModifierName"			"modifier_cyborg_cluster_rockets_thinker"
						"Target"				"POINT"
					}
				}
			}
		}
		
		"Modifiers"
		{
			"modifier_cyborg_cluster_rockets_thinker"
			{
				"ThinkInterval"				"%tick_rate"
				"Duration"					"%damage_duration"
				"OnCreated"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/heroes/hero_cyborg/cyborg_cluster_rockets"
						"Function"		"ClusterThink"
						"Target"		"POINT"
					}
				}
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/heroes/hero_cyborg/cyborg_cluster_rockets"
						"Function"		"ClusterThink"
						"Target"		"POINT"
					}
				}
			}
		}
	}
	//=================================================================================================================
	// Ability: Organic Replacement(Cyborg)
	//=================================================================================================================
	   "primary_cyborg_organic_replacement"
	   {
	  	// General
		//-------------------------------------------------------------------------------------------------------------
		 "AbilityName"              "cyborg_organic_replacement"
		"BaseClass"				"ability_datadriven"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		 "MaxLevel"                 "8"
	
		"AbilityTextureName"			"rattletrap_power_cogs"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"particle"		"particles/units/heroes/hero_phantom_assassin/phantom_assassin_blur.vpcf"
			"soundfile"		"soundevents/game_sounds_heroes/game_sounds_omniknight.vsndevts"
			"soundfile"				"soundevents/game_sounds_heroes/game_sounds_tinker.vsndevts"
	
	
		}
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_evasion"				"7 13 19 24 29 33 37 40"
			}
	
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"bonus_health"			"25 50 75 100 125 150 175 200"
			}
	
		}
	
			"OnUpgrade"
				{
					"FireSound"
					{
						"Target"		"CASTER"
						"EffectName"	"Hero_Tinker.Rearm"
	
					}
					"AttachEffect"
					{
						"EffectName"		"particles/units/heroes/hero_meepo/meepo_poof.vpcf"
						"EffectAttachType"	"attach_hitloc"
						"Target"			"TARGET"
	
						"ControlPointEntities"
						{
							"TARGET"	"attach_hitloc"
						}
					}
				}
	
	
	
	
		"Modifiers"
		{
	
	
	
			"modifier_blur_datadriven"
			{
	
	
	
	
	
				"Passive"	"1"
				"IsHidden"	"1"
				"Properties"
				{
					"MODIFIER_PROPERTY_EVASION_CONSTANT"	"%bonus_evasion"
				    "MODIFIER_PROPERTY_HEALTH_BONUS"		"%bonus_health"
				}
			}
		}
	}
	//=================================================================================================================
	// Ability: Xtreme Combat Mode (Cyborg)
	//=================================================================================================================
	   "primary_cyborg_xtreme_combat_mode"
	   {
	      // General
	      //-------------------------------------------------------------------------------------------------------------
	      "BaseClass"				      "ability_datadriven"
	      "AbilityName"              "Xtreme Combat Mode"
	      "AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE"
	      "MaxLevel"                 "16"
	      "LevelsBetweenUpgrades"    "0"
	      "AbilityTextureName"			"bristleback_warpath"
	
	      // Casting
	      "AbilityCastPoint"			"0.0"
	      "AbilityCooldown"				"21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 31.0 36.0 40.0 44.0 48.0 52.0 56.0 60.0"
	      "AbilityManaCost"				"90 92 94 96 98 100 102 104 106 108 110 112 114 116 118 120"
	      // Special
	      //-------------------------------------------------------------------------------------------------------------
	      	// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"particle"	"models/heroes/wisp/wisp_overcharge.vmdl"
			"soundfile"		"soundevents/game_sounds_heroes/game_sounds_sven.vsndevts"
		}
	
	
	
	
	
	  "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"				   "FIELD_FLOAT"
	            "duration"				   "20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 31.0 35.0 39.0 43.0 47.0 51.0 55.0 59.0"
	         }
	         "02"
	         {
	            "var_type"              "FIELD_INTEGER"
	            "bonus_damage_percent"           "19 21 23 25 27 29 31 33 36 40 45 51 58 66 75 85"
	         }
	         "03"
	         {
	            "var_type"              "FIELD_FLOAT"
	            "bonus_health_regen"         "0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0"
	         }
		 "04"
	         {
	            "var_type"              "FIELD_FLOAT"
	            "bonus_armor"         "1 2 3 4 5 6 7 8 8 8 8 8 8 8 8 8"
	         }
	      }
	      "OnSpellStart"
	      {
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_cyborg_xtreme_combat_mode"
	            "Target"       "CASTER"
	            "Duration"     "%duration"
	         }
	      }
	
		"Modifiers"
		{
			"modifier_cyborg_xtreme_combat_mode"
			{
			"OnCreated"
				{
					"FireSound"
					{
						"EffectName"	"Hero_Sven.WarCry"
						"Target"		"CASTER"
					}
					"AttachEffect"
					{
						"EffectName"		"particles/units/heroes/hero_wisp/wisp_overcharge.vpcf"
						"EffectAttachType"	"attach_hitloc"
						"Target"			"TARGET"
	
						"ControlPointEntities"
						{
							"TARGET"	"attach_hitloc"
						}
					}
				}
	
	
				"Properties"
				{
					"MODIFIER_PROPERTY_HEALTH_REGEN_CONSTANT"   "%bonus_health_regen"
					"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS" "%bonus_armor"
					"MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE" "%bonus_damage_percent"
				}
			}
	        }
	   }
	//=================================================================================================================
	// Demolitions: Advanced Generator
	//=================================================================================================================
	"primary_demo_advanced_generator"
	{
	  	// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"					"ability_datadriven"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"MaxLevel"                 "16"
		"LevelsBetweenUpgrades"  	"0"
		"AbilityTextureName"			"dark_seer_ion_shell"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"particle"			"particles/units/heroes/hero_phantom_assassin/phantom_assassin_blur.vpcf"
		}
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_regen"				"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16"
			}
		}
	
		"OnUpgrade"
		{
			"LevelUpAbility"
			{
				"Target" "CASTER"
				"AbilityName" "demo_biochemical_energy"
			}
		}
	
		"Modifiers"
		{
			"modifier_demo_advanced_generator"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"Properties"
				{
					"MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"	"%bonus_regen"
				}
			}
		}
	}
	//=================================================================================================================
	// Demolitions: MIRV
	//=================================================================================================================
	"primary_demo_mirv"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"              	"ability_datadriven"
		"AbilityBehavior"        	"DOTA_ABILITY_BEHAVIOR_POINT"
		"AbilityUnitDamageType"  	"DAMAGE_TYPE_PHYSICAL"
		"AbilityUnitTargetTeam"		"DOTA_UNIT_TARGET_TEAM_BOTH"
		"AbilityUnitTargetType"		"DOTA_UNIT_TARGET_ALL"
		"AbilityTextureName"			"doom_bringer_scorched_earth"
		"MaxLevel"						"16"
		"LevelsBetweenUpgrades"  	"0"
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"  "0.3"
		"AbilityCastRange"  "1000"
		"FightRecapLevel"				"1"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"6"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"135 135 180 180 215 215 250 250 280 280 320 320 340 340 350 350"
	
		// Damage
		//-------------------------------------------------------------------------------------------------------------
		"AbilityDamage"					"250"
	
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"particle"	"models/heroes/techies/techies_bomb_projectile.vmdl"
			"soundfile"		"soundevents/game_sounds_heroes/game_sounds_batrider.vsndevts"
			"particle"  "particles/units/heroes/hero_batrider/batrider_base_attack_explosion.vpcf"
			"particle"  "particles/units/heroes/hero_batrider/batrider_firefly_path.vpcf"
			"particle"  "particles/units/heroes/hero_batrider/batrider_firefly_debuff.vpcf"
		"soundfile"		"soundevents/game_sounds_heroes/game_sounds_techies.vsndevts"
		"particle"		"particles/units/heroes/hero_techies/techies_suicide_base.vpcf"
		"soundfile"				"soundevents/game_sounds_heroes/game_sounds_tinker.vsndevts"
		"particle"				"particles/units/heroes/hero_tinker/tinker_missile.vpcf"
		"particle"				"particles/units/heroes/hero_tinker/tinker_missle_explosion.vpcf"
		"particle"				"particles/units/heroes/hero_tinker/tinker_missile_dud.vpcf"
		"particle"					"particles/units/heroes/hero_phoenix/phoenix_icarus_dive.vpcf"
		}
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"                	"FIELD_INTEGER"
				"outer_radius"              "192"
			}
			"02"
			{
				"var_type"                	"FIELD_INTEGER"
				"inner_radius"              "144"
			}
			"03"
			{
				"var_type"                	"FIELD_INTEGER"
				"outer_damage"              "150" //scaled upt to 16
			}
			"04"
			{
				"var_type"                	"FIELD_INTEGER"
				"inner_damage"              "100" //scaled upt to 16
			}
			"05"
			{
				"var_type"                	"FIELD_INTEGER"
				"napalm_damage"           	"5 10 10 15 15 20 20 30 30 45 45 60 60 80 80 100" //scaled upt to 16
			}
			"06"
			{
				"var_type"                	"FIELD_INTEGER"
				"armor_reduction"         	"-4"
			}
			"07"
			{
				"var_type"                	"FIELD_FLOAT"
				"tick_rate"                	"1.0"
			}
			"08"
			{
				"var_type"                	"FIELD_INTEGER"
				"duration"                	"2 3 3 4 4 5 5 7 7 9 9 11 11 14 14 18" //scaled upt to 16
			}
			"09"
			{
				"var_type"                	"FIELD_INTEGER"
				"iMIRV"                		"2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9" //scaled upt to 16
			}
			"10"
			{
				"var_type"                	"FIELD_INTEGER"
				"minDistance"                "36"
			}
			"11"
			{
				"var_type"                	"FIELD_INTEGER"
				"maxDistance"               "180"
			}
			"12"
			{
				"var_type"                	"FIELD_FLOAT"
				"delay"                		".25"
			}
			"13"
			{
				"var_type"                	"FIELD_FLOAT"
				"slop"                		"30"
			}
			"14"
			{
				"var_type"                	"FIELD_INTEGER"
				"linger_duration"           "3"
			}
	
		}
	
		"OnSpellStart"
		{
			"LinearProjectile"
			{
				"Target"			"POINT"
				"EffectName"		"particles\units\heroes\hero_tinker\tinker_heat_seeking_missile.vpcf"
				"StartRadius"		"125"
				"EndRadius"			"125"
				"MoveSpeed"			"1600"
				"TargetTeams"		"DOTA_UNIT_TARGET_TEAM_NONE"
				"TargetTypes"		"DOTA_UNIT_TARGET_BASIC"
				"ProvidesVision"	"0"
				"HasFrontalCone"	"0"
			}
			"FireSound"
	        {
	            "Target"			"CASTER"
	            "EffectName"		"Hero_Tinker.Heat-Seeking_Missile"
	        }
	
		}
	
		"OnProjectileHitUnit"
	       {
	           "FireSound"
	           {
	               "Target"			"TARGET"
	               "EffectName"		"Hero_Tinker.Heat-Seeking_Missile.Impact"
	           }
	       
	           "FireEffect"
	           {
	               "Target"			"TARGET"
	               "EffectName"		"particles/units/heroes/hero_tinker/tinker_missle_explosion.vpcf"
	               "EffectAttachType"	"start_at_customorigin"
	               "ControlPointEntities"
	               {
	                   "TARGET"		"attach_origin"
	               }
	           }
	       
	       }
	
	
	
	
		"OnProjectileFinish"
		{
			"RunScript"
			{
				"ScriptFile"        "heroes/hero_demo/mirv.lua"
				"Function"          "OnProjectileFinish"
				"iMIRV"				"%iMIRV"
				"Target"			"POINT"
				"slop"				"%slop"
				"duration" 			"%duration"
				"napalm_damage" 	"%napalm_damage"
				"minDistance" 		"%minDistance"
				"maxDistance" 		"%maxDistance"
				"delay" 			"%delay"
				"tick_rate" 		"%tick_rate"
				"linger_duration"	"%linger_duration"
			}
		}
	
		"Modifiers"
		{
			"modifier_demo_mirv_thinker"
			{
	
	
				"EffectName"		"particles/units/heroes/hero_phoenix/phoenix_icarus_dive.vpcf"
				"EffectAttachType"	"follow_origin"
				"Aura" "modifier_demo_mirv_napalm"
				"Aura_Radius" "%outer_radius"
				"Aura_Teams" "DOTA_UNIT_TARGET_TEAM_BOTH"
				"Aura_Types" "DOTA_UNIT_TARGET_ALL"
				"Aura_Flags" "DOTA_UNIT_TARGET_FLAG_NONE"
				"Duration" "%duration"
	
	
				"OnCreated"
				{
					"FireEffect"
					{
						"EffectName" "particles/units/heroes/hero_batrider/batrider_firefly_debuff.vpcf"
						"EffectAttachType" "follow_origin"
						"Target" "TARGET"
					}
	
						"FireSound"
						{
							"EffectName"	"Hero_Techies.Suicide"
							"Target" 		"CASTER"
						}
	
	
					"Damage"
					{
						"Target"
						{
							"Center"  	"TARGET"
							"Radius" 	"%outer_radius"
							"Teams" 	"DOTA_UNIT_TARGET_TEAM_BOTH"
							"Types" 	"DOTA_UNIT_TARGET_ALL"
						}
						"Type"			"DAMAGE_TYPE_PHYSICAL"
						"Damage"		"%outer_damage"
					}
	
					"Damage"
					{
						"Target"
						{
							"Center"  	"TARGET"
							"Radius" 	"%inner_radius"
							"Teams" 	"DOTA_UNIT_TARGET_TEAM_BOTH"
							"Types" 	"DOTA_UNIT_TARGET_ALL"
						}
						"Type"			"DAMAGE_TYPE_PHYSICAL"
						"Damage"		"%inner_damage"
					}
				}
			}
	
			"modifier_demo_mirv_napalm"
			{
				"IsDebuff" "1"
				"IsPurgable" "0"
				"ThinkInterval" "%tick_rate"
				"Duration" "%linger_duration"
				"OnIntervalThink"
				{
					     "FireEffect"
						{
							"EffectName" "particles/units/heroes/hero_batrider/batrider_firefly_debuff.vpcf"
							"EffectAttachType" "follow_origin"
							"Target" "TARGET"
						}
	
	
					"Damage"
					{
						"Type"   "DAMAGE_TYPE_PHYSICAL"
						"Damage" "%napalm_damage"
						"Target" "TARGET"
					}
				}
				"Properties"
				{
					"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS" "%armor_reduction"
				}
			}
		}
	}
	//=================================================================================================================
	// Ability: Droid Ammo (Heavy Ordnance)
	//=================================================================================================================
	"primary_ho_droid_ammo"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		
		"BaseClass"						"ability_datadriven"
		"MaxLevel"                 		"4"
		"AbilityTextureName"			"sniper_shrapnel"
		
		"AbilitySpecial" //duplicated in primary_minidroid_xyz for display purposes
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"damage_min"				"1 2 3 4"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"damage_max"				"5 10 15 20"
			}
			"03"
			{
				"var_type"					"FIELD_INTEGER"
				"range"						"75 150 225 300"
			}
		}
		
		"OnUpgrade"
		{
			"RunScript"
			{
				"ScriptFile"	"heroes/hero_heavy_ordnance/ho_droid_ammo.lua"
				"Function"		"UpdateDroids"
			}
		}
	}
	//=================================================================================================================
	// Ability: Droid Integrity (Heavy Ordnance)
	//=================================================================================================================
	"primary_ho_droid_integrity"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		
		"BaseClass"						"ability_datadriven"
		"MaxLevel"                 		"3"
		"AbilityTextureName"			"shredder_reactive_armor"
		
		"AbilitySpecial" //duplicated in primary_minidroid_xyz for display purposes
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"health_regen"		"1 2 3"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"damage_reduction"			"-4 -8 -12"
			}
		}
	}
	//=================================================================================================================
	// Ability: Droid Mobility (Heavy Ordnance)
	//=================================================================================================================
	"primary_ho_droid_mobility"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		
		"BaseClass"						"ability_datadriven"
		"MaxLevel"                 		"1"
		"AbilityTextureName"			"bounty_hunter_track"
		
		"AbilitySpecial" //duplicated in primary_minidroid_xyz for display purposes
		{
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"move_speed"			"30"
			}
		}
	}
	//=================================================================================================================
	// Ability: Plasma Shield (Heavy Ordnance)
	//=================================================================================================================
	   "primary_ho_plasma_shield"
	   {
	  	// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityName"               "primary_ho_plasma_shield"
		"BaseClass"				    "ability_datadriven"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_TOGGLE"
		"MaxLevel"                  "8"
	    "AbilityManaCost"		    "1 2 3 4 5 6 7 8"
		"AbilityDamage"				"50 75 100 125 150 175 200 225"
		"AbilityCastRange"			"%burn_radius"
		"AbilityUnitDamageType"		"DAMAGE_TYPE_MAGICAL"
	    "LevelsBetweenUpgrades"  	"1"
		"AbilityTextureName"		"rattletrap_power_cogs"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"particle"		"particles/units/heroes/hero_phantom_assassin/phantom_assassin_blur.vpcf"
			"soundfile"		"soundevents/game_sounds_heroes/game_sounds_omniknight.vsndevts"
			"soundfile"				"soundevents/game_sounds_heroes/game_sounds_tinker.vsndevts"
		}
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_evasion"				"7 13 19 24 29 33 37 40"
			}
			"02"
			{
				"var_type"				    "FIELD_INTEGER"
				"eps_cost"			        "-1 -2 -3 -4 -5 -6 -7 -8"
			}
	        "03"
			{
				"var_type"			        "FIELD_INTEGER"
				"burn_radius"				"144"
			}
	        "04"
			{
				"var_type"			        "FIELD_INTEGER"
				"burn_interval"				"1"
			}
	    }
	
		"OnToggleOn"
		{
			"FireSound"
			{
				"Target"		"CASTER"
				"EffectName"	"Hero_Tinker.Rearm"
	
			}
	        "ApplyModifier"
			{
				"ModifierName"		"modifier_ho_plasma_shield"
				"Target"			"CASTER"
			}
		}
		
		"OnToggleOff"
		{
			"FireSound"
			{
				"Target"		"CASTER"
				"EffectName"	"Hero_Tinker.Rearm"
	
			}
	        "RemoveModifier"
			{
				"ModifierName"		"modifier_ho_plasma_shield"
				"Target"			"CASTER"
			}
		}
	
		"Modifiers"
		{
			"modifier_ho_plasma_shield"
			{
				"ThinkInterval"         "%burn_interval"
	            "OnIntervalThink"
	            {
	                "RunScript"
					{
						"ScriptFile"	    "heroes/hero_heavy_ordnance/ho_plasma_shield.lua"
						"Function"		    "BurnInnards"
						"radius"			"%burn_radius"
					}
	            }
				"Properties"
				{
					"MODIFIER_PROPERTY_EVASION_CONSTANT"			"%bonus_evasion"
					"MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"			"%eps_cost"
				}
			}
		}
	}
	//=================================================================================================================
	// Ability: Heavy Ordnance Power Grid
	//=================================================================================================================
	"primary_ho_power_grid"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_CHANNELLED"
		"BaseClass"						"ability_datadriven"
		"MaxLevel"						"16"
		"AbilityTextureName"			"pudge_dismember"
		
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastPoint"				"0.3"

		"AbilityCooldown"				"120 104 91 79 69 60 52 45 40 34 30 26 23 20 17 15"
		"AbilityChannelTime"			"20"

		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"
		
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_FLOAT"
				"unpowered_eps"			"20 22.5 25 27.5 30 32.5 34.5 36.5 38.5 40.5 42.5 44 45.5 47 48.5 50"
			}
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"powered_eps"			"40 45 50 55 60 65 69 73 77 81 85 88 91 94 97 100"
			}
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"linger_duration"		"3"
			}
		}
		
		"OnSpellStart"
		{
			"RunScript"
			{
				"ScriptFile"        "heroes/hero_heavy_ordnance/ho_power_grid.lua"
				"Function"          "ApplyPowerModifier"
			}
			
			"FireSound"
			{
				"Target"			"CASTER"
				"EffectName"		"hero_Crystal.freezingField.wind"
			}
		}
		
		"OnChannelFinish"
		{
			"DelayedAction"
			{
				"Delay" 			"%linger_duration"
				"Action"
				{
					"RemoveModifier"
					{
						"Target"			"CASTER"
						"ModifierName"		"modifier_power_grid_unpowered"
					}
					"RemoveModifier"
					{
						"Target"			"CASTER"
						"ModifierName"		"modifier_power_grid_powered"
					}
				}
			}
		}
		
		"Modifiers"
		{
			"modifier_power_grid_unpowered"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"			"%unpowered_eps"
				}				
			}
			"modifier_power_grid_powered"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"			"%powered_eps"
				}				
			}
		}
	}
	//=================================================================================================================
	// Ability: Storage Cells (Heavy Ordnance)
	//=================================================================================================================
	"primary_ho_storage_cells"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		
		// This is a lua ability so that I can apply the lua modifier for the regen buff so it's conditional on the current energy
		"BaseClass"						"ability_lua"
		"MaxLevel"                 		"8"
		"ScriptFile"					"heroes/hero_heavy_ordnance/primary_ho_storage_cells"
		"AbilityTextureName"			"rattletrap_power_cogs"
	
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			 //This ability grants stacks of the buffs.
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"bonus_storage"			"250 500 750 1000 1250 1500 1750 2000"
			}
	
			"02"
			{
				"var_type"				"FIELD_INTEGER"
				"bonus_regen"			"1 2 3 4 5 6 7 8"
			}
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"regen_threshhold"		"1000"
			}
		}
	}
	//=================================================================================================================
	// Ability: Adrenaline Junkie (Medic)
	//================================================================================================================= 
	   "primary_medic_adrenaline_junkie"
	   {
	  	// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityName"              "medic_adrenaline_junkie"
		"BaseClass"				"ability_datadriven"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"MaxLevel"                 "8"
	
		"AbilityTextureName"			"doom_bringer_devour"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"particle"		"particles/units/heroes/hero_phantom_assassin/phantom_assassin_blur.vpcf"
			"soundfile"		"soundevents/game_sounds_heroes/game_sounds_omniknight.vsndevts"
			"soundfile"				"soundevents/game_sounds_heroes/game_sounds_tinker.vsndevts"
			
	
		}	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"junkie_chance"		"65 70 75 80 85 90 95 100"
			}
			"02"
			{
				"var_type"			"FIELD_INTEGER"
				"max_rush_bonus"	"2 4 6 8 10 12 14 16"
			}
		}
	}
	//=================================================================================================================
	// Ability: Mend Wounds (Medic)
	//=================================================================================================================
	"primary_medic_mend_wounds"
	    {
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
		"AbilityName"           	    "Mend Wounds"
		// for some unknown reason the backswing for this is around 3 seconds, so let's ignore it instead
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_AUTOCAST"
	
		"MaxLevel"                 	 	"16"
		"LevelsBetweenUpgrades"  	"0"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"AbilityTextureName"			"rubick_spell_steal"
	
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_dark_seer.vsndevts"
	
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"100"
		"AbilityCastPoint"				"0.05"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"1.5"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"heal"				"17 23 28 34 39 45 50 56 61 67 72 78 83 89 94 100"
			}
		
			"02"
			{
				"var_type"			"FIELD_INTEGER"
				"auto_cast_range"	"625"
			}
			
			"03"
			{
				"var_type"			"FIELD_INTEGER"
				"bandage_bonus"		"17 23 28 34 39 45 50 56 61 67 72 78 83 89 94 100"
			}
		}
		
		"OnAbilityPhaseStart"
		{
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/heroes/hero_medic/medic_mend_wounds.lua"
				"Function"		"OnAbilityPhaseStart"
				"Target"		"TARGET"
			}
		}
		
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Dark_Seer.Ion_Shield_Star"
				"Target"		"TARGET"
			}
			"Heal"
			{
				"Target" 		"TARGET"
				"HealAmount"	"%heal"
			}
	
		}
		
		"Modifiers"
		{
			"modifier_medic_mend_wounds_autocast"
			{
				"Passive"				"1"
				"IsHidden"				"1"
				"OnCreated"
				{
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_medic/medic_mend_wounds.lua"
						"Function"		"HealAutocast"
					}
				}
	
				"ThinkInterval" ".15"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"heroes/hero_medic/medic_mend_wounds.lua"
						"Function"		"HealAutocast"
					}
				}
			}
		}
	}
	//=================================================================================================================
	// Ability: Nano-Injection (Medic)
	//=================================================================================================================
	"primary_medic_nano_injection"
	    {
	        // General
	        //-------------------------------------------------------------------------------------------------------------
	        "BaseClass"						"ability_datadriven"
	        "AbilityName"              "Nano-Injection"
	        "AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
	
	        "MaxLevel"                 "16"
		"LevelsBetweenUpgrades"  	"0"
	        "AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
	        "AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
	        "AbilityTextureName"			"omniknight_purification"
	
	
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"175 205 235 265 295 325 355 385 415 445 475 505 535 565 595 625"
		"AbilityCastPoint"				"0.05"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"20.0"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"250"
	
	
			// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"heal"				"100 120 140 170 200 240 280 330 380 440 500 500 500 500 500 500"
			}
			"02"
			{
				"var_type"			"FIELD_INTEGER"
				"HoT"				"0 0 0 0 0 0 0 0 0 0 0 10 20 30 40 50"
			}
			"03"
			{
				"var_type"			"FIELD_INTEGER"
				"HoT_chance"				"0 0 0 0 0 0 0 0 0 0 0 100 100 100 100 100"
			}
	            "04"
	            {
				"var_type"			"FIELD_INTEGER"
				"remove_rez_sick_chance"				"0 0 0 0 0 0 0 0 0 0 0 10 20 40 70 100"
	            }
		}
		
		"OnAbilityPhaseStart"
		{
			"RunScript"
			{
	               "ScriptFile"		"scripts/vscripts/heroes/hero_medic/medic_nano_injection.lua"
	               "Function"		"OnAbilityPhaseStart"
	            }
		}
		
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Omniknight.Purification"
				"Target"		"TARGET"
			}
	
			"FireEffect"
			{
				"Target"			"TARGET"
				"EffectName"		"particles/units/heroes/hero_omniknight/omniknight_purification.vpcf"
				"EffectAttachType"	"follow_origin"
				"ControlPoints"
				{
					"00"	"0 0 0"
					"01"	"%radius %radius %radius"
				}
			}
	
			"FireEffect"
			{
				"Target"			"TARGET"
				"EffectName"		"particles/units/heroes/hero_omniknight/omniknight_purification_cast.vpcf"
				"EffectAttachType"	"follow_origin"
			}
	
			"Heal"
			{
				"Target" 		"TARGET"
				"HealAmount"	"%heal"
			}
	            "Random"
			{
				"Chance"		"%remove_rez_sick_chance"
	
				"OnSuccess"
				{
					"RemoveModifier"
					{
						"ModifierName"	"modifier_medic_revive_rez_sickness_lua"
						"Target"		"TARGET"
					}
				}
			}
	            "Random"
			{
				"Chance"		"%HoT_chance"
	
				"OnSuccess"
				{
					"ApplyModifier"
					{
						"ModifierName"	"modifier_nano_hot_thinker"
						"Target"		"TARGET"
					}
				}
			}
		}
	
	        "modifiers"
	        {
	            "modifier_nano_hot_thinker"
	            {
	                "Duration" "6"
	                "ThinkInterval" "1"
	                "OnIntervalThink"
	                {
	                    "Heal"
	                    {
	                        "Target" 		"TARGET"
	                        "HealAmount"	"%HoT"
	                    }
	                }
	            }
	        }
	}
	//=================================================================================================================
	// Ability: Energy Beam (Minidroid)
	//=================================================================================================================
	"primary_minidroid_energy_beam"
	    {
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
		"AbilityName"           	    "Energy Beam"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
	
		"MaxLevel"                 	 	"8"
		"LevelsBetweenUpgrades"  		"0"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"AbilityTextureName"			"rubick_spell_steal"
	
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_dark_seer.vsndevts"
	
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"350"
		"AbilityCastPoint"				"0"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"20"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"							"FIELD_INTEGER"
				"energy_transferred"				"120 160 200 240 280 320 360 400"
			}
	
		}
		
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Dark_Seer.Ion_Shield_Star"
				"Target"		"TARGET"
			}
			"RunScript"
			{
				"ScriptFile"	"heroes/hero_heavy_ordnance/minidroid_energy_beam.lua"
				"Function"		"TransferEnergyKeys"
			}
		}
	}
	//=================================================================================================================
	// Ability: Droid Mobility (Minidroid)
	//=================================================================================================================
	"primary_minidroid_storage_cells"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		
		"BaseClass"						"ability_datadriven"
		"MaxLevel"                 		"4"
		"AbilityTextureName"			"rattletrap_power_cogs"
		
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"				"FIELD_INTEGER"
				"storage"				"250 500 750 1000"
			}
		}
		
		
		//"OnUpgrade"
		//{
		//	"RunScript"
		//	{
		//		"ScriptFile"	"heroes/hero_heavy_ordnance/minidroid_storage_cells.lua"
		//		"Function"		"AdjustManaDown"
		//	}
		//	"RunScript"
		//	{
		//		"ScriptFile"	"heroes/hero_heavy_ordnance/minidroid_storage_cells.lua"
		//		"Function"		"SetUnitLevelForUpgrade"
		//	}
		//}
		
		// In case dota changes so this works
		//"Modifiers"
		//{
		//	"modifier_minidroid_storage_cells"
		//	{	
		//		"Passive"				"1"
		//		
		//		"Properties"
		//		{
		//			"MODIFIER_PROPERTY_MANA_BONUS"			"%storage"
		//		}
		//	}
		//}
	}
	//=================================================================================================================
	// Ability: Radiation Damage Civ
	// Levels of the skill correspond to postive radiation count rad levels (so level one is rads 1-19, two is 20-39...etc)
	//=================================================================================================================
	"radiation_damage_civ"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"		                "ability_datadriven"
		"AbilityBehavior"	        	"DOTA_ABILITY_BEHAVIOR_NO_TARGET"
		"AbilityTextureName"        	"earth_spirit_petrify"
	    "AbilityUnitDamageType"			"DAMAGE_TYPE_MAGICAL"
		"MaxLevel"	"6"
	
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"				"FIELD_FLOAT"
	            "damage_per_second"		"1.5 3.0 6.0 12.0 25.0 50.0"
	         }
	         "02"
	         {
	             "var_type"          "FIELD_INTEGER"
	             "global_radius"     "20000"
	         }
	         "03"
	         {
	             "var_type"                  "FIELD_INTEGER"
	             "aura_damage_interval"      "1"
	         }
	      }
	
	    "Modifiers"
	    {
	        "modifier_rad_damage_civ_aura"
	        {
	            "Passive"               "1"
	            "IsPurgable"            "0"
	            "IsHidden"              "0"
	            "Aura"                  "modifier_rad_damage_civ_effect"
	            "Aura_Radius"           "%global_radius"
	            "Aura_Teams"            "DOTA_UNIT_TARGET_TEAM_ENEMY"
	            "Aura_Types"            "DOTA_UNIT_TARGET_BASIC"
	        }
	
	        "modifier_rad_damage_civ_effect"
	        {
	            "Passive"           "0"
	            "IsHidden"          "0"
	            "IsBuff"            "0"
	            "IsDebuff"          "1"
	            "IsPurgable"        "0"
	
	            "ThinkInterval"         "%aura_damage_interval"
	            "OnIntervalThink"
	            {
	                "RunScript"
	                {
	                    "ScriptFile"            "abilities/game_radiation_damage.lua"
	                    "Function"              "modifier_game_radiation_damage"
	                    "RadiationDamage"       "%damage_per_second"
	                    "IsFatal"               "1"
	                }
	            }
	        }
	    }
	}
	//=================================================================================================================
	// Ability: Radiation Damage Hero
	// Levels of the skill correspond to postive radiation count rad levels (so level one is rads 1-19, two is 20-39...etc)
	//=================================================================================================================
	"radiation_damage_hero"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"		                "ability_datadriven"
		"AbilityBehavior"	        	"DOTA_ABILITY_BEHAVIOR_NO_TARGET"
		"AbilityTextureName"        	"earth_spirit_petrify"
	    "AbilityUnitDamageType"			"DAMAGE_TYPE_MAGICAL"
		"MaxLevel"	"6"
	
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"				"FIELD_FLOAT"
	            "damage_per_second"		"0.8 2.0 12.0 25.0"
	         }
	         "02"
	         {
	             "var_type"          "FIELD_INTEGER"
	             "global_radius"     "30000"
	         }
	         "03"
	         {
	             "var_type"                  "FIELD_INTEGER"
	             "aura_damage_interval"      "1"
	         }
	      }
	
		"Modifiers"
		{
	        "modifier_rad_damage_hero_aura"
	        {
	            "Passive"               "1"
	            "IsPurgable"            "0"
	            "IsHidden"              "0"
	            "Aura"                  "modifier_rad_damage_hero_effect"
	            "Aura_Radius"           "%global_radius"
	            "Aura_Teams"            "DOTA_UNIT_TARGET_TEAM_ENEMY"
	            "Aura_Types"            "DOTA_UNIT_TARGET_HERO"
	            "Aura_ApplyToCaster"    "0"
	        }
	
			"modifier_rad_damage_hero_effect"
			{
	            "Passive"           "0"
	            "IsHidden"          "0"
	            "IsBuff"            "0"
	            "IsDebuff"          "1"
	            "IsPurgable"        "0"
	
	            "ThinkInterval"         "%aura_damage_interval"
	            "OnIntervalThink"
	            {
	                "RunScript"
	                {
	                    "ScriptFile"            "abilities/game_radiation_damage.lua"
	                    "Function"              "modifier_game_radiation_damage"
	                    "RadiationDamage"       "%damage_per_second"
	                    "IsFatal"               "0"
	                }
	            }
			}
		}
	}
	//=================================================================================================================
	// Ability: Radiation Mob Buff
	// Buffs mobs mana regen rate based on the rad level
	//=================================================================================================================
	"radiation_mob_buff"
	{
	    // General
	    //-------------------------------------------------------------------------------------------------------------
	    "BaseClass"                     "ability_datadriven"
	    "AbilityBehavior"               "DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_AURA"
	    "AbilityUnitTargetTeam"         "DOTA_UNIT_TARGET_TEAM_FRIENDLY"
	    "AbilityTextureName"            "crystal_maiden_brilliance_aura"
	    "MaxLevel"                      "6"
	
	    // Special
	    //-------------------------------------------------------------------------------------------------------------
	    "AbilitySpecial"
	    {
	        "01"
	        {
	            "var_type"          "FIELD_FLOAT"
	            "mana_regen"        "0.02 0.08 0.40 2.00 10.00 50.00"
	        }
	        // Extra variables
	        "02"
	        {
	            "var_type"          "FIELD_INTEGER"
	            "global_radius"     "20000"
	        }
	    }
	
	    // Data driven
	    //-------------------------------------------------------------------------------------------------------------
	    "Modifiers"
	    {
	        "modifier_rad_mob_buff_aura"
	        {
	            "Passive"               "1"
	            "IsPurgable"            "0"
	            "IsHidden"              "1"
	            "Aura"                  "modifier_rad_mob_buff_effect"
	            "Aura_Radius"           "%global_radius"
	            "Aura_Teams"            "DOTA_UNIT_TARGET_TEAM_FRIENDLY"
	            "Aura_Types"            "DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_HERO"
	            "Aura_ApplyToCaster"    "0"
	
	            "Properties"
	            {
	                "MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"     "%mana_regen"
	            }
	        }
	
	        "modifier_rad_mob_buff_effect"
	        {
	            "Properties"
	            {
	                "MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"     "%mana_regen"
	            }
	        }
	    }
	}
	//=================================================================================================================
	// Ability: Sprint (Light,Medium,Heavy)
	//=================================================================================================================
	"sprint_datadriven"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"		"ability_datadriven"
		"AbilityBehavior"		"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL"
		"AbilityTextureName" 	"clinkz_wind_walk"
		"MaxLevel"	"3"
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"0"
		"AbilityCastPoint"				"0.0"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"150 30 20"
	
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_speed"				"80 60 50"
			}
			"02"
			{
				"var_type"					"FIELD_FLOAT"
				"duration"					"6.0"
			}
			"03"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_evasion"				"100"
			}
		}
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"Target" "CASTER"
				"ModifierName" "modifier_sprint_datadriven"
			}
			"FireSound"
			{
				"EffectName" "Hero_Slardar.Sprint"
				"Target"	 "CASTER"
			}
		}
		"Modifiers"
		{
			"modifier_sprint_datadriven"
			{
				"IsBuff" "1"
				"Duration" "%duration"
				"EffectName"	"particles/units/heroes/hero_slardar/slardar_sprint.vpcf"
				"EffectAttachType"	"follow_origin"
	
	
				"Properties"
				{
					"MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE" "%bonus_speed"
					"MODIFIER_PROPERTY_EVASION_CONSTANT" "%bonus_evasion"
					"MODIFIER_STATE_NO_UNIT_COLLISION"	"1"
				}
	            "States"
	            {
	               "MODIFIER_STATE_NO_UNIT_COLLISION"	"MODIFIER_STATE_VALUE_ENABLED"
	            }
			}
		}
	}
	//=================================================================================================================
	// Ability: Mana_Drain (Power Core)
	//=================================================================================================================
	"swat_ability_mana_drain"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_CHANNELLED | DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"AbilityUnitTargetFlags"		"DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_NO"
		"AbilityTextureName"			"lion_mana_drain"
	      "MaxLevel"                 "1"
	
		// Precache
		//-------------------------------------------------------------------------------------------------------------
		"precache"
		{
			"soundfile"			"soundevents/game_sounds_heroes/game_sounds_lion.vsndevts"
			"particle"			"particles/units/heroes/hero_lion/lion_spell_mana_drain.vpcf"
		}
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"500"
		"AbilityCastPoint"				"0.3"
		"AbilityChannelTime"			"30.1"
	
		// Time
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"0.5"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"0"
	
		// Stats
		//-------------------------------------------------------------------------------------------------------------
		"AbilityModifierSupportValue"	"5.0"	// better then the mana cost implies
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"					"FIELD_FLOAT"
				"duration"					"30.0"
			}
			"02"
			{
				"var_type"					"FIELD_INTEGER"
				"mana_per_second"			"60"
			}
			"03"
			{
				"var_type"					"FIELD_INTEGER"
				"break_distance"			"650"
			}
			"04"
			{
				"var_type"					"FIELD_FLOAT"
				"tick_interval"			"0.25"
			}
		}
		"OnSpellStart"
		{
			"FireSound"
			{
				"EffectName"	"Hero_Lion.ManaDrain"
				"Target"		   "TARGET"
			}
	
			"ApplyModifier"
			{
				"ModifierName"	"modifier_mana_drain"
				"Target"			"TARGET"
			}
		}
		"OnChannelInterrupted"
		{
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/units/power_core/power_core_mana_drain.lua"
				"Function"		"mana_drain_stop_sound"
				"sound"			"Hero_Lion.ManaDrain"
			}
			"RemoveModifier"
			{
				"ModifierName"	"modifier_mana_drain"
				"Target"			"TARGET"
			}
		}
		"OnChannelFinish"
		{
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/units/power_core/power_core_mana_drain.lua"
				"Function"		"mana_drain_stop_sound"
				"sound"			"Hero_Lion.ManaDrain"
			}
			"RemoveModifier"
			{
				"ModifierName"	"modifier_mana_drain"
				"Target"			"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_mana_drain"
			{
				"IsHidden"	"1"
	            "IsDebuff"	"1"
				"Duration"	"%duration"
	
				"OnCreated"
				{
					"AttachEffect"
					{
						"EffectName"	      "particles/units/heroes/hero_lion/lion_spell_mana_drain.vpcf"
						"EffectAttachType"	"start_at_customorigin"
						"Target"		         "TARGET"
	
						"ControlPointEntities"
						{
							"TARGET"	"attach_hitloc"
							"CASTER"	"attach_hitloc"
						}
					}
				}
				"ThinkInterval"	"%tick_interval"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/units/power_core/power_core_mana_drain.lua"
						"Function"		"mana_drain"
					}
				}
			}
	         "modifier_mana_drain_autocast"
	         {
	            "Passive"   "1"
	            "IsHidden"  "1"
	            "ThinkInterval"   "1"
	            "OnIntervalThink"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"   "scripts/vscripts/units/power_core/power_core_mana_drain.lua"
	                  "Function"     "auto_cast"
	               }
	            }
	         }
		}
	}
	//=================================================================================================================
	// Ability: assault_rifleI // Mark 1 Assault Rifle skill
	//=================================================================================================================
	"weapon_assault_rifleI"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Refined Rifle"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"                 "17"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "sniper_assassinate"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
	         "01"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_radius"				"24 96 155"
	         }
	         "02"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_damage_percent"		"100 65 45"
	         }
	         "03"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "damage_bonus"	         "0  12 18 24 30 36 42 48 54 60 66 72 78 84 90 96 102 108 114"
	         }
	         "04"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_attack_range"		"0 15 30 45 60 75 90 105 120 135 150 165 180 195 210 225 240 255 270 285"
		   }
		}
	
		"Modifiers"
		{
			"modifier_assault_rifleI_datadriven"
			{
	            "Passive"	"1"
				"IsHidden"	"1"
	
	            "OnAttackLanded"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"	"scripts/vscripts/heroes/hero__marine/weapons.lua"
	                  "Function"		"Splash"
	               }
	            }
	            "Properties"
			   {
				   "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS"	"%bonus_attack_range"
	               "MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE" "%damage_bonus"
			   }
			}
		}
	}
	//=================================================================================================================
	// Ability: assault_rifleII // Mark 2 Assault Rifle skill
	//=================================================================================================================
	"weapon_assault_rifleII"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Refined Rifle"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"                 "19"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "sniper_assassinate"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
	         "01"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_radius"				"24 96 155"
	         }
	         "02"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_damage_percent"		"100 90 50"
	         }
	         "03"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "damage_bonus"	         "0  12 18 24 30 36 42 48 54 60 66 72 78 84 90 96 102 108 114"
	         }
	         "04"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_attack_range"		"0 15 30 45 60 75 90 105 120 135 150 165 180 195 210 225 240 255 270 285"
		   }
		}
	
		"Modifiers"
		{
			"modifier_assault_rifleII_datadriven"
			{
	            "Passive"	"1"
				"IsHidden"	"1"
	
	            "OnAttackLanded"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"	"scripts/vscripts/heroes/hero__marine/weapons.lua"
	                  "Function"		"Splash"
	               }
	            }
	            "Properties"
			   {
				   "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS"	"%bonus_attack_range"
	               "MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE" "%damage_bonus"
			   }
			}
		}
	   }
	//=================================================================================================================
	// Ability: assault_rifle_urban // Medic Urban Assault Rifle skill
	//=================================================================================================================
	"weapon_assault_rifle_urban"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Refined AntiPersonnel Rifle"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"                 "17"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "sniper_assassinate"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
	         "01"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_radius"				"24 96 155"
	         }
	         "02"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_damage_percent"		"100 45 25"
	         }
	         "03"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "damage_bonus"	         "0  12 18 24 30 36 42 48 54 60 66 72 78 84 90 96 102 108 114"
	         }
	         "04"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_attack_range"		"0 15 30 45 60 75 90 105 120 135 150 165 180 195 210 225 240 255 270 285"
		   }
		}
	
		"Modifiers"
		{
			"modifier_assault_rifle_urban_datadriven"
			{
	            "Passive"	"1"
				"IsHidden"	"1"
	
	            "OnAttackLanded"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"	"scripts/vscripts/heroes/hero__marine/weapons.lua"
	                  "Function"		"Splash"
	               }
	            }
	            "Properties"
			   {
				   "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS"	"%bonus_attack_range"
	               "MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE" "%damage_bonus"
			   }
			}
		}
	   }
	//=================================================================================================================
	// Ability: chaingunI // Mark 1 Chaingun skill
	//=================================================================================================================
	"weapon_chaingunI"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Plasma Rounds"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_AUTOCAST | DOTA_ABILITY_BEHAVIOR_ATTACK"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"                 "17"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "clinkz_searing_arrows"
	      "AbilityUnitTargetTeam"    "DOTA_UNIT_TARGET_TEAM_BOTH"
	      "AbilityUnitTargetType"    "DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_BUILDING"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
	         "01"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_radius"				"24 96 120"
	         }
	         "02"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_damage_percent"		"100 90 15"
	         }
	         "03"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_attack_range"		"-275"
		   }
	         "04"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_damage"		      "0 4 9 10 11 12 13 20 22 24 26 28 38 41 44 47 50 53 56 59"
		   }
	         "05"
	         {
	            "var_type"					"FIELD_INTEGER"
			   "attack_speed_slow"		"0 -1 -2 -3 -4 -4 -6 -7 -8 -9 -10 -12 -14 -16 -18 -20 -22 -24 -26"
	         }
	         "06"
	         {
	            "var_type"					"FIELD_INTEGER"
			   "movement_speed_slow"	"0 -20 -25 -26 -27 -28 -29 -35 -36 -37 -38 -39 -45 -46 -47 -48 -49 -50 -51 -52"
	         }
	         "07"
	         {
	            "var_type"					"FIELD_FLOAT"
			   "slow_duration"	      "0 0.15 0.25 0.25 0.25 0.25 0.45 0.45 0.45 0.45 0.45 0.70 0.70 0.70 0.70 0.70 0.70 0.70 0.70"
	         }
	         "08"
	         {
	            "var_type"					"FIELD_INTEGER"
			   "mana_cost"	            "1 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4 4 4 4"
	         }
		}
	
	      // Casting
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilityCastRange"				"550"
	      "AbilityCastPoint"				"0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0"
	
	      // Time
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilityCooldown"				"0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0"
	
	      "OnToggleOn"
	      {
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_vindicator_on_datadriven"
	            "Target" "CASTER"
	         }
	      }
	      "OnToggleOff"
	      {
	         "RemoveModifier"
	         {
	            "ModifierName" "modifier_vindicator_on_datadriven"
	            "Target" "CASTER"
	         }
	      }
	
		"Modifiers"
		{
			"modifier_vindicator_datadriven"
			{
	            "Passive"	"1"
				"IsHidden"	"1"
	
	            "OnAttackLanded"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"	"scripts/vscripts/heroes/hero__marine/weapons.lua"
	                  "Function"		"Splash"
				  "hits_player_units" "0"
	               }
	            }
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS" "%bonus_attack_range"
			   "MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE" "%bonus_damage"
	            }
	
	            "Orb"
	            {
	               "Priority"			"DOTA_ORB_PRIORITY_ABILITY"
	               "ProjectileName"	"particles/units/heroes/hero_viper/viper_poison_attack.vpcf"
	               "CastAttack"		"1"
	            }
	            "OnOrbFire"
	            {
	               "SpendMana"
	               {
	                  "Mana"	"%mana_cost"
	               }
	            }
	            "OnOrbImpact"
	            {
	               "ApplyModifier"
	               {
	                  "ModifierName" "modifier_plasma_slow_datadriven"
	                  "Target"
	                  {
	                     "Center" "TARGET"
	                     "Radius" "120"
	                     "Teams" "DOTA_UNIT_TARGET_TEAM_BOTH"
	                     "Types" "DOTA_UNIT_TARGET_ALL"
					 "ExcludeFlags" "DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
	                  }
	                  "Duration" "%slow_duration"
	               }
	            }
			}
	
	         "modifier_plasma_slow_datadriven"
	         {
	            "IsDebuff" "1"
	
	            //"EffectName" "particles/generic_gameplay/generic_slowed_cold.vpcf"
	            //"EffectAttachType" "follow_origin"
	
	            "Properties"
	            {
	              "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE" "%movement_speed_slow"
	              "MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT" "%attack_speed_slow"
	            }
	         }
		}
	   }
	//=================================================================================================================
	// Ability: chaingunII // Mark 2 chaingun skill
	//=================================================================================================================
	"weapon_chaingunII"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Plasma Rounds"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_AUTOCAST | DOTA_ABILITY_BEHAVIOR_ATTACK"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"                 "19"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "clinkz_searing_arrows"
	      "AbilityUnitTargetTeam"    "DOTA_UNIT_TARGET_TEAM_BOTH"
	      "AbilityUnitTargetType"    "DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_BUILDING"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
	         "01"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_radius"				"24 96 120"
	         }
	         "02"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_damage_percent"		"100 90 15"
	         }
	         "03"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_attack_range"		"-275"
		   }
	         "04"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_damage"		      "0 4 9 10 11 12 13 20 22 24 26 28 38 41 44 47 50 53 56 59"
		   }
	         "05"
	         {
	            "var_type"					"FIELD_INTEGER"
			   "attack_speed_slow"		"0 -1 -2 -3 -4 -4 -6 -7 -8 -9 -10 -12 -14 -16 -18 -20 -22 -24 -26"
	         }
	         "06"
	         {
	            "var_type"					"FIELD_INTEGER"
			   "movement_speed_slow"	"0 -20 -25 -26 -27 -28 -29 -35 -36 -37 -38 -39 -45 -46 -47 -48 -49 -50 -51 -52"
	         }
	         "07"
	         {
	            "var_type"					"FIELD_FLOAT"
			   "slow_duration"	      "0 0.15 0.25 0.25 0.25 0.25 0.45 0.45 0.45 0.45 0.45 0.70 0.70 0.70 0.70 0.70 0.70 0.70 0.70"
	         }
	         "08"
	         {
	            "var_type"					"FIELD_INTEGER"
			   "mana_cost"	            "1 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4 4 4 4"
	         }
		}
	
	      // Casting
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilityCastRange"				"550"
	      "AbilityCastPoint"				"0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0"
	
	      // Time
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilityCooldown"				"0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0"
	
	      "OnToggleOn"
	      {
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_vindicator_on_datadriven"
	            "Target" "CASTER"
	         }
	      }
	      "OnToggleOff"
	      {
	         "RemoveModifier"
	         {
	            "ModifierName" "modifier_vindicator_on_datadriven"
	            "Target" "CASTER"
	         }
	      }
	
		"Modifiers"
		{
			"modifier_vindicator_datadriven"
			{
	            "Passive"	"1"
				"IsHidden"	"1"
	
	            "OnAttackLanded"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"	"scripts/vscripts/heroes/hero__marine/weapons.lua"
	                  "Function"		"Splash"
				  "hits_player_units" "0"
	               }
	            }
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS" "%bonus_attack_range"
			   "MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE" "%bonus_damage"
	            }
	
	            "Orb"
	            {
	               "Priority"			"DOTA_ORB_PRIORITY_ABILITY"
	               "ProjectileName"	"particles/units/heroes/hero_viper/viper_poison_attack.vpcf"
	               "CastAttack"		"1"
	            }
	            "OnOrbFire"
	            {
	               "SpendMana"
	               {
	                  "Mana"	"%mana_cost"
	               }
	            }
	            "OnOrbImpact"
	            {
	               "ApplyModifier"
	               {
	                  "ModifierName" "modifier_plasma_slow_datadriven"
	                  "Target"
	                  {
	                     "Center" "TARGET"
	                     "Radius" "120"
	                     "Teams" "DOTA_UNIT_TARGET_TEAM_BOTH"
	                     "Types" "DOTA_UNIT_TARGET_ALL"
					 "ExcludeFlags" "DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
	                  }
	                  "Duration" "%slow_duration"
	               }
	            }
			}
	
	         "modifier_plasma_slow_datadriven"
	         {
	            "IsDebuff" "1"
	
	            //"EffectName" "particles/generic_gameplay/generic_slowed_cold.vpcf"
	            //"EffectAttachType" "follow_origin"
	
	            "Properties"
	            {
	              "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE" "%movement_speed_slow"
	              "MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT" "%attack_speed_slow"
	            }
	         }
		}
	   }
	//=================================================================================================================
	// Ability: flamethrower // Mark 1 & 2 flamethrower skill
	//=================================================================================================================
	"weapon_flamethrower"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Advanced Fuel"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"                 "17"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "luna_moon_glaive"
	      "AbilityUnitTargetType"         "DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_BUILDING"
	      "AbilityUnitTargetTeam"         "DOTA_UNIT_TARGET_TEAM_ENEMY"
	
	      "precache"
	      {
	         "particle"			"particles/units/heroes/hero_lina/lina_base_attack.vpcf"
	      }
	
	      // Special
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilitySpecial"
	      {
	         "01"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "range"						"200 200 200 200 200 200 200 200 200 200 200 200 200 200 200 200 200 200 200 200"
	         }
	         "02"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "bounces"					"9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9"
	         }
	         "03"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "damage_bonus"	         "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19"
	         }
	         "04"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_attack_range"		"-200 -200 -200 -200 -200 -200 -200 -200 -200 -200 -200 -200 -200 -200 -200 -200 -200 -200 -200 -200"
		   }
	      }
	
	      "Modifiers"
	      {
	         "modifier_flamethrower_datadriven"
	         {
	            "Passive"         "1"
	            "IsPurgable"		"0"
			   "IsHidden"			"1"
	            "OnAttackLanded"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"	"scripts/vscripts/heroes/hero_luna/moon_glaive.lua"
	                  "Function"		"moon_glaive_start_create_dummy"
	               }
	            }
	
			   "Properties"
			   {
				   "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS"	"%bonus_attack_range"
	               "MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE" "%damage_bonus"
			   }
	         }
	      }
	   }
	//=================================================================================================================
	// Ability: Plasma Rounds // Mark 1 Chaingun skill
	//=================================================================================================================
	"weapon_plasma_rounds_mini"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"						"ability_datadriven"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_AUTOCAST | DOTA_ABILITY_BEHAVIOR_ATTACK"
		"AbilityUnitTargetTeam"			"DOTA_UNIT_TARGET_TEAM_BPTH"
		"AbilityUnitTargetType"			"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_MECHANICAL | DOTA_UNIT_TARGET_BUILDING"
		"AbilityUnitTargetFlags"		"DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES"
		"SpellImmunityType"				"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"						"16"
		"AbilityUnitDamageType"			"DAMAGE_TYPE_PHYSICAL"
		"AbilityTextureName"			"clinkz_searing_arrows"
	
		// Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"850"
		"AbilityCastPoint"				"0"
	
		// Time		
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCooldown"				"0"
	
		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4"
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
		    "01"
	        {
	           "var_type"					"FIELD_INTEGER"
	           "splash_radius"				"24 96 120"
	        }
	        "02"
	        {
	           "var_type"					"FIELD_INTEGER"
	           "splash_damage_percent"		"100 90 15"
	        }
	        "03"
			{
				"var_type"					"FIELD_INTEGER"
				"bonus_damage"		      	"3 4 5 6 12 14 16 18 27 29 31 33 44 46 48 50"
			}
	        "04"
	        {
				"var_type"					"FIELD_INTEGER"
				"attack_speed_slow"			"-1 -1 -1 -1 -2 -2 -2 -2 -3 -3 -3 -3 -4 -4 -4 -4"
	        }
	        "05"
	        {
				"var_type"					"FIELD_INTEGER"
				"movement_speed_slow"		"-2 -2 -2 -2 -3 -3 -3 -3 -4 -4 -4 -4 -5 -5 -5 -5"
	        }
	        "06"
	        {
				"var_type"					"FIELD_FLOAT"
				"slow_duration"	      		".10 .10 .10 .10 .15 .15 .15 .15 .25 .25 .25 .25 .45 .45 .45 .45"
	        }
		}
	
	
	
		"precache"
		{
			"particle"  "particles/units/heroes/hero_clinkz/clinkz_searing_arrow.vpcf"
			"soundfile" "soundevents/game_sounds_heroes/game_sounds_clinkz.vsndevts"
		}
	
		"Modifiers"
		{
			"modifier_plasma_rounds_orb_mini"
			{
				"Passive"               "1"
	
				"Orb"
				{
					"Priority"			"DOTA_ORB_PRIORITY_DEFAULT"
					"ProjectileName"    "particles/units/heroes/hero_clinkz/clinkz_searing_arrow.vpcf"
					"CastAttack"		"1"
				}
	
				"OnOrbFire"
				{
					"SpendMana"
					{
						"Mana"    		"%AbilityManaCost"
					}
	
					"FireSound"
					{
						"EffectName"	"Hero_Clinkz.SearingArrows"
						"Target"		"CASTER"
					}
				}
				
				"OnOrbImpact"
				{
					"RunScript"
					{
						"ScriptFile"			"scripts/vscripts/heroes/hero__marine/weapons.lua"
						"Function"				"Splash"
						"hits_player_units" 	"0"
						"orb_modifier"			"modifier_plasma_rounds_slow"
						"orb_damage"			"%bonus_damage"
					}
					
					"FireSound"
					{
						"EffectName"	"Hero_Clinkz.SearingArrows.Impact"
						"Target"		"CASTER"
					}
				}
			}
	
	        "modifier_plasma_rounds_slow"
	        {
				"IsDebuff" 						"1"
				"Duration"						"%slow_duration"
				"EffectName" 					"particles/generic_gameplay/generic_slowed_cold.vpcf"
				"EffectAttachType" 				"follow_origin"
		
				"Properties"
				{
					"MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE" "%movement_speed_slow"
					"MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT" "%attack_speed_slow"
				}
	        }
		}
	}
	//=================================================================================================================
	// Ability: rocketI // Mark 1 rocket skill
	//=================================================================================================================
	"weapon_rocketI"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Lock-Down"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_TOGGLE"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"                 "9"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "gyrocopter_rocket_barrage"
	
	
	      // Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"0"
		"AbilityCastPoint"				"0.0"
	      "AbilityCooldown"				"6"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
	         "01"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_radius"				"96 192 264"
	         }
	         "02"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_damage_percent"		"100 66 33"
	         }
	         "03"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "damage_increase"				"0 10 16 22 28 34 40 46 52 58"
	         }
	         "04"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "attack_speed_increase"		"0 3 6 9 12 15 18 21 24 27"
	         }
	         "05"
	         {
	            "var_type" "FIELD_FLOAT"
	            "base_attack_time" "3.1 3.010 2.925 2.844 2.768 2.696 2.627 2.562 2.500 2.441"
	         }
	         "06"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_attack_range"		"600"
		   }
		}
	
	      "OnToggleOn"
	      {
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_lockdown_datadriven"
	            "Target" "CASTER"
	         }
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_lockdown_disarm_datadriven"
	            "Target" "CASTER"
	         }
	      }
	
	      "OnToggleOff"
	      {
	         "RemoveModifier"
	         {
	            "ModifierName" "modifier_lockdown_datadriven"
	            "Target" "CASTER"
	         }
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_lockdown_disarm_datadriven"
	            "Target" "CASTER"
	         }
	      }
	
		"Modifiers"
		{
			"modifier_rocket_datadriven"
			{
	            "Passive"	"1"
				"IsHidden"	"1"
	
	            "OnAttackLanded"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"	"scripts/vscripts/heroes/hero__marine/weapons.lua"
	                  "Function"		"Splash"
	               }
	            }
	
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS" "%bonus_attack_range"
	            }
			}
	         "modifier_lockdown_datadriven"
	         {
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE" "%damage_increase"
	               "MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT" "%base_attack_time"
	            }
	            "States"
	            {
	               "MODIFIER_STATE_ROOTED" "MODIFIER_STATE_VALUE_ENABLED"
	            }
	         }
	         "modifier_lockdown_disarm_datadriven"
	         {
	            "Duration" "3"
	            "States"
	            {
	               "MODIFIER_STATE_DISARMED" "MODIFIER_STATE_VALUE_ENABLED"
	               "MODIFIER_STATE_ROOTED" "MODIFIER_STATE_VALUE_ENABLED"
	            }
	         }
	
		}
	   }
	//=================================================================================================================
	// Ability: rocketII // Mark 2 rocket skill
	//=================================================================================================================
	"weapon_rocketII"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Lock-Down"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_TOGGLE"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"                 "11"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "gyrocopter_rocket_barrage"
	
	
	      // Casting
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"0"
		"AbilityCastPoint"				"0.0"
	      "AbilityCooldown"				"6"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
	         "01"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_radius"				"96 192 264"
	         }
	         "02"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_damage_percent"		"100 66 33"
	         }
	         "03"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "damage_increase"				"0 10 16 22 28 34 40 46 52 58 64"
	         }
	         "04"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "attack_speed_increase"		"0 3 6 9 12 15 18 21 24 27 30"
	         }
	         "05"
	         {
	            "var_type" "FIELD_FLOAT"
	            "base_attack_time" "2.818 2.738 2.658 2.585 2.516 2.45 2.388 2.329 2.273 2.219 2.168"
	         }
	         "06"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_attack_range"		"600"
		   }
		}
	
	      "OnToggleOn"
	      {
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_lockdown_datadriven"
	            "Target" "CASTER"
	         }
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_lockdown_disarm_datadriven"
	            "Target" "CASTER"
	         }
	      }
	
	      "OnToggleOff"
	      {
	         "RemoveModifier"
	         {
	            "ModifierName" "modifier_lockdown_datadriven"
	            "Target" "CASTER"
	         }
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_lockdown_disarm_datadriven"
	            "Target" "CASTER"
	         }
	      }
	
		"Modifiers"
		{
			"modifier_rocket_datadriven"
			{
	            "Passive"	"1"
				"IsHidden"	"1"
	
	            "OnAttackLanded"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"	"scripts/vscripts/heroes/hero__marine/weapons.lua"
	                  "Function"		"Splash"
	               }
	            }
	
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS" "%bonus_attack_range"
	            }
			}
	         "modifier_lockdown_datadriven"
	         {
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE" "%damage_increase"
	               "MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT" "%base_attack_time"
	            }
	            "States"
	            {
	               "MODIFIER_STATE_ROOTED" "MODIFIER_STATE_VALUE_ENABLED"
	            }
	         }
	         "modifier_lockdown_disarm_datadriven"
	         {
	            "Duration" "3"
	            "States"
	            {
	               "MODIFIER_STATE_DISARMED" "MODIFIER_STATE_VALUE_ENABLED"
	               "MODIFIER_STATE_ROOTED" "MODIFIER_STATE_VALUE_ENABLED"
	            }
	         }
	
		}
	   }
	//=================================================================================================================
	// Ability: sniper_rifleI // Mark 1 Sniper Rifle skill
	//=================================================================================================================
	"weapon_sniper_rifleI"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Refined Rifle"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"                 "9"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "sven_great_cleave"
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
	         "04"
			{
				"var_type"					"FIELD_INTEGER"
				"crit_chance"				"0 10 15 20 25 30 35 40 45 50 55 60"
			}
			"05"
			{
				"var_type"					"FIELD_INTEGER"
				"crit_damage"				"100 200 220 240 260 280 300 320 340 360 380 400"
			}
	      }
	      "Modifiers"
	      {
	         "modifier_chance_to_crit_sniper1_datadriven"
	         {
	            "Passive"   "1"
	            "IsHidden"	"1"
	            "OnAttackStart"
				{
					"RemoveModifier"
					{
						"ModifierName"	"modifier_sniper1_crit_datadriven"
						"Target"		"CASTER"
					}
					"Random"
					{
						"Chance"		"%crit_chance"
	
						"OnSuccess"
						{
							"ApplyModifier"
							{
								"ModifierName"	"modifier_sniper1_crit_datadriven"
								"Target"		"CASTER"
							}
						}
					}
				}
	         }
	      	"modifier_sniper1_crit_datadriven"
			{
				"IsHidden"		"1"
				"IsPurgable"	"0"
				"OnAttackLanded"
				// "%attack_damage" is set to the damage value before mitigation
				{
					"RemoveModifier"
					{
						"ModifierName"	"modifier_sniper1_crit_datadriven"
						"Target" 		"CASTER"
					}
				}
				"Properties"
				{
					"MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE" "%crit_damage"
				}
			}
	      }
	   }
	//=================================================================================================================
	// Ability: sniper_rifleII // Mark 2 Sniper Rifle skill
	//=================================================================================================================
	"weapon_sniper_rifleII"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Refined Rifle"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_YES"
		"MaxLevel"                 "11"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "sven_great_cleave"
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
	         "04"
			{
				"var_type"					"FIELD_INTEGER"
				"crit_chance"				"0 10 15 20 25 30 35 40 45 50 55 60"
			}
			"05"
			{
				"var_type"					"FIELD_INTEGER"
				"crit_damage"				"100 200 220 240 260 280 300 320 340 360 380 400"
			}
	      }
	      "Modifiers"
	      {
	         "modifier_chance_to_crit_sniper2_datadriven"
	         {
	            "Passive"   "1"
	            "IsHidden"	"1"
	            "OnAttackStart"
				{
					"RemoveModifier"
					{
						"ModifierName"	"modifier_sniper2_crit_datadriven"
						"Target"		"CASTER"
					}
					"Random"
					{
						"Chance"		"%crit_chance"
	
						"OnSuccess"
						{
							"ApplyModifier"
							{
								"ModifierName"	"modifier_sniper2_crit_datadriven"
								"Target"		"CASTER"
							}
						}
					}
				}
	         }
	      	"modifier_sniper2_crit_datadriven"
			{
				"IsHidden"		"1"
				"IsPurgable"	"0"
				"OnAttackLanded"
				// "%attack_damage" is set to the damage value before mitigation
				{
					"RemoveModifier"
					{
						"ModifierName"	"modifier_sniper2_crit_datadriven"
						"Target" 		"CASTER"
					}
				}
				"Properties"
				{
					"MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE" "%crit_damage"
				}
			}
	      }
	   }
	//=================================================================================================================
	// Ability: vindicator // Cyborg vindicator skill
	//=================================================================================================================
	"weapon_vindicator"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass"				      "ability_datadriven"
		"AbilityName"              "Plasma-V Rounds"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_AUTOCAST | DOTA_ABILITY_BEHAVIOR_ATTACK"
		"MaxLevel"                 "17"
		"LevelsBetweenUpgrades"    "0"
		"AbilityTextureName"       "clinkz_searing_arrows"
		"AbilityUnitTargetTeam"    "DOTA_UNIT_TARGET_TEAM_BOTH"
		"AbilityUnitTargetType"    "DOTA_UNIT_TARGET_ALL"
	
	
		// Special
		//-------------------------------------------------------------------------------------------------------------
		"AbilitySpecial"
		{
	         "01"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_radius"				"24 96 120"
	         }
	         "02"
	         {
	            "var_type"					"FIELD_INTEGER"
	            "splash_damage_percent"		"100 90 15"
	         }
	         "03"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_attack_range"		"-350"
		   }
	         "04"
		   {
			   "var_type"					"FIELD_INTEGER"
			   "bonus_damage"		      "0 5 9 13 17 21 25 29 33 37 41 45 49 53 57 61 65"
		   }
	         "05"
	         {
	            "var_type"					"FIELD_INTEGER"
			   "attack_speed_slow"		"0 -4 -5 -5 -6 -6 -7 -7 -8 -8 -9 -9 -10 -10 -11 -11 -12"
	         }
	         "06"
	         {
	            "var_type"					"FIELD_INTEGER"
			   "movement_speed_slow"	"0 -20 -20 -20 -20 -20 -20 -20 -20 -20 -20 -20 -20 -20 -20 -20 -20"
	         }
	         "07"
	         {
	            "var_type"					"FIELD_FLOAT"
			   "slow_duration"	      "0 0.25 0.28 0.31 0.34 0.37 0.40 0.43 0.46 0.49 0.52 0.55 0.58 0.61 0.64 0.67 0.70"
	         }
	         "08"
	         {
	            "var_type"					"FIELD_INTEGER"
			   "mana_cost"	            "1"
	         }
		}
	
	      // Casting
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilityCastRange"				"550"
	      "AbilityCastPoint"				"0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0"
	
	      // Time
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilityCooldown"				"0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0"
	
	      // Cost
	      //-------------------------------------------------------------------------------------------------------------
	      "AbilityManaCost"				"%mana_cost"
	
	      "OnToggleOn"
	      {
	         "ApplyModifier"
	         {
	            "ModifierName" "modifier_vindicator_on_datadriven"
	            "Target" "CASTER"
	         }
	      }
	      "OnToggleOff"
	      {
	         "RemoveModifier"
	         {
	            "ModifierName" "modifier_vindicator_on_datadriven"
	            "Target" "CASTER"
	         }
	      }
	
		"Modifiers"
		{
			"modifier_vindicator_datadriven"
			{
	            "Passive"	"1"
				"IsHidden"	"1"
	
	            "OnAttackLanded"
	            {
	               "RunScript"
	               {
	                  "ScriptFile"	"scripts/vscripts/heroes/hero__marine/weapons.lua"
	                  "Function"		"Splash"
				  "hits_player_units" "0"
	               }
	            }
	            "Properties"
	            {
	               "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS" "%bonus_attack_range"
			   "MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE" "%bonus_damage"
	            }
	
	            "Orb"
	            {
	               "Priority"			"DOTA_ORB_PRIORITY_ABILITY"
	               "ProjectileName"	"particles/units/heroes/hero_viper/viper_poison_attack.vpcf"
	               "CastAttack"		"1"
	            }
	            "OnOrbFire"
	            {
	               "SpendMana"
	               {
	                  "Mana"	"%mana_cost"
	               }
	            }
	            "OnOrbImpact"
	            {
	               "ApplyModifier"
	               {
	                  "ModifierName" "modifier_plasma_slow_datadriven"
	                  "Target"
	                  {
	                     "Center" "TARGET"
	                     "Radius" "120"
	                     "Teams" "DOTA_UNIT_TARGET_TEAM_BOTH"
	                     "Types" "DOTA_UNIT_TARGET_ALL"
					 "ExcludeFlags" "DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED"
	                  }
	                  "Duration" "%slow_duration"
	               }
	            }
			}
	
	         "modifier_plasma_slow_datadriven"
	         {
	            "IsDebuff" "1"
	
	            //"EffectName" "particles/generic_gameplay/generic_slowed_cold.vpcf"
	            //"EffectAttachType" "follow_origin"
	
	            "Properties"
	            {
	              "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE" "%movement_speed_slow"
	              "MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT" "%attack_speed_slow"
	            }
	         }
		}
	   }
}